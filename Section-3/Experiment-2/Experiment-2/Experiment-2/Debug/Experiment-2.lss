
Experiment-2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800100  00000fee  00001082  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000fee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800120  00800120  000010a2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000010a2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001100  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  00001140  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001223  00000000  00000000  00001230  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000952  00000000  00000000  00002453  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008ed  00000000  00000000  00002da5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001f4  00000000  00000000  00003694  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000627  00000000  00000000  00003888  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009f8  00000000  00000000  00003eaf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  000048a7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	b4 c0       	rjmp	.+360    	; 0x16a <__ctors_end>
   2:	00 00       	nop
   4:	cd c0       	rjmp	.+410    	; 0x1a0 <__bad_interrupt>
   6:	00 00       	nop
   8:	cb c0       	rjmp	.+406    	; 0x1a0 <__bad_interrupt>
   a:	00 00       	nop
   c:	c9 c0       	rjmp	.+402    	; 0x1a0 <__bad_interrupt>
   e:	00 00       	nop
  10:	c7 c0       	rjmp	.+398    	; 0x1a0 <__bad_interrupt>
  12:	00 00       	nop
  14:	c5 c0       	rjmp	.+394    	; 0x1a0 <__bad_interrupt>
  16:	00 00       	nop
  18:	c3 c0       	rjmp	.+390    	; 0x1a0 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	c1 c0       	rjmp	.+386    	; 0x1a0 <__bad_interrupt>
  1e:	00 00       	nop
  20:	bf c0       	rjmp	.+382    	; 0x1a0 <__bad_interrupt>
  22:	00 00       	nop
  24:	bd c0       	rjmp	.+378    	; 0x1a0 <__bad_interrupt>
  26:	00 00       	nop
  28:	bb c0       	rjmp	.+374    	; 0x1a0 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	b9 c0       	rjmp	.+370    	; 0x1a0 <__bad_interrupt>
  2e:	00 00       	nop
  30:	b7 c0       	rjmp	.+366    	; 0x1a0 <__bad_interrupt>
  32:	00 00       	nop
  34:	b5 c0       	rjmp	.+362    	; 0x1a0 <__bad_interrupt>
  36:	00 00       	nop
  38:	b3 c0       	rjmp	.+358    	; 0x1a0 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	b1 c0       	rjmp	.+354    	; 0x1a0 <__bad_interrupt>
  3e:	00 00       	nop
  40:	af c0       	rjmp	.+350    	; 0x1a0 <__bad_interrupt>
  42:	00 00       	nop
  44:	ad c0       	rjmp	.+346    	; 0x1a0 <__bad_interrupt>
  46:	00 00       	nop
  48:	ab c0       	rjmp	.+342    	; 0x1a0 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	a9 c0       	rjmp	.+338    	; 0x1a0 <__bad_interrupt>
  4e:	00 00       	nop
  50:	a7 c0       	rjmp	.+334    	; 0x1a0 <__bad_interrupt>
  52:	00 00       	nop
  54:	0f c1       	rjmp	.+542    	; 0x274 <__vector_21>
  56:	00 00       	nop
  58:	a3 c0       	rjmp	.+326    	; 0x1a0 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	a1 c0       	rjmp	.+322    	; 0x1a0 <__bad_interrupt>
  5e:	00 00       	nop
  60:	9f c0       	rjmp	.+318    	; 0x1a0 <__bad_interrupt>
  62:	00 00       	nop
  64:	9d c0       	rjmp	.+314    	; 0x1a0 <__bad_interrupt>
	...

00000068 <__trampolines_end>:
  68:	6e 61       	ori	r22, 0x1E	; 30
  6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
  6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
  7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
  8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
  9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
  ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
  bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
  cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
  dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
  ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
  fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
 10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
 11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
 12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
 13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
 14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
 15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
 16a:	11 24       	eor	r1, r1
 16c:	1f be       	out	0x3f, r1	; 63
 16e:	cf ef       	ldi	r28, 0xFF	; 255
 170:	d8 e0       	ldi	r29, 0x08	; 8
 172:	de bf       	out	0x3e, r29	; 62
 174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
 176:	11 e0       	ldi	r17, 0x01	; 1
 178:	a0 e0       	ldi	r26, 0x00	; 0
 17a:	b1 e0       	ldi	r27, 0x01	; 1
 17c:	ee ee       	ldi	r30, 0xEE	; 238
 17e:	ff e0       	ldi	r31, 0x0F	; 15
 180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
 182:	05 90       	lpm	r0, Z+
 184:	0d 92       	st	X+, r0
 186:	a0 32       	cpi	r26, 0x20	; 32
 188:	b1 07       	cpc	r27, r17
 18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
 18c:	21 e0       	ldi	r18, 0x01	; 1
 18e:	a0 e2       	ldi	r26, 0x20	; 32
 190:	b1 e0       	ldi	r27, 0x01	; 1
 192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
 194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
 196:	a2 32       	cpi	r26, 0x22	; 34
 198:	b2 07       	cpc	r27, r18
 19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
 19c:	90 d0       	rcall	.+288    	; 0x2be <main>
 19e:	25 c7       	rjmp	.+3658   	; 0xfea <_exit>

000001a0 <__bad_interrupt>:
 1a0:	2f cf       	rjmp	.-418    	; 0x0 <__vectors>

000001a2 <sharp_sensor_pin_config>:
	// clear the MUX[4:0] bits for next conversion
	ADMUX_reg &= ~(1<<MUX4_bit);
	ADMUX_reg &= ~(1<<MUX3_bit);
	ADMUX_reg &= ~(1<<MUX2_bit);
	ADMUX_reg &= ~(1<<MUX1_bit);
	ADMUX_reg &= ~(1<<MUX0_bit);
 1a2:	38 98       	cbi	0x07, 0	; 7
 1a4:	40 98       	cbi	0x08, 0	; 8
 1a6:	08 95       	ret

000001a8 <adc_init>:
 1a8:	f8 94       	cli
 1aa:	ea e7       	ldi	r30, 0x7A	; 122
 1ac:	f0 e0       	ldi	r31, 0x00	; 0
 1ae:	80 81       	ld	r24, Z
 1b0:	80 68       	ori	r24, 0x80	; 128
 1b2:	80 83       	st	Z, r24
 1b4:	80 81       	ld	r24, Z
 1b6:	88 60       	ori	r24, 0x08	; 8
 1b8:	80 83       	st	Z, r24
 1ba:	80 81       	ld	r24, Z
 1bc:	84 60       	ori	r24, 0x04	; 4
 1be:	80 83       	st	Z, r24
 1c0:	80 81       	ld	r24, Z
 1c2:	82 60       	ori	r24, 0x02	; 2
 1c4:	80 83       	st	Z, r24
 1c6:	80 81       	ld	r24, Z
 1c8:	8e 7f       	andi	r24, 0xFE	; 254
 1ca:	80 83       	st	Z, r24
 1cc:	80 81       	ld	r24, Z
 1ce:	8f 7b       	andi	r24, 0xBF	; 191
 1d0:	80 83       	st	Z, r24
 1d2:	80 81       	ld	r24, Z
 1d4:	8f 7d       	andi	r24, 0xDF	; 223
 1d6:	80 83       	st	Z, r24
 1d8:	80 81       	ld	r24, Z
 1da:	8f 7e       	andi	r24, 0xEF	; 239
 1dc:	80 83       	st	Z, r24
 1de:	eb e7       	ldi	r30, 0x7B	; 123
 1e0:	f0 e0       	ldi	r31, 0x00	; 0
 1e2:	80 81       	ld	r24, Z
 1e4:	8f 7b       	andi	r24, 0xBF	; 191
 1e6:	80 83       	st	Z, r24
 1e8:	80 81       	ld	r24, Z
 1ea:	87 7f       	andi	r24, 0xF7	; 247
 1ec:	80 83       	st	Z, r24
 1ee:	80 81       	ld	r24, Z
 1f0:	8b 7f       	andi	r24, 0xFB	; 251
 1f2:	80 83       	st	Z, r24
 1f4:	80 81       	ld	r24, Z
 1f6:	8d 7f       	andi	r24, 0xFD	; 253
 1f8:	80 83       	st	Z, r24
 1fa:	80 81       	ld	r24, Z
 1fc:	8e 7f       	andi	r24, 0xFE	; 254
 1fe:	80 83       	st	Z, r24
 200:	ec e7       	ldi	r30, 0x7C	; 124
 202:	f0 e0       	ldi	r31, 0x00	; 0
 204:	80 81       	ld	r24, Z
 206:	80 64       	ori	r24, 0x40	; 64
 208:	80 83       	st	Z, r24
 20a:	80 81       	ld	r24, Z
 20c:	8f 77       	andi	r24, 0x7F	; 127
 20e:	80 83       	st	Z, r24
 210:	80 81       	ld	r24, Z
 212:	8f 7e       	andi	r24, 0xEF	; 239
 214:	80 83       	st	Z, r24
 216:	80 81       	ld	r24, Z
 218:	87 7f       	andi	r24, 0xF7	; 247
 21a:	80 83       	st	Z, r24
 21c:	80 81       	ld	r24, Z
 21e:	8b 7f       	andi	r24, 0xFB	; 251
 220:	80 83       	st	Z, r24
 222:	80 81       	ld	r24, Z
 224:	8d 7f       	andi	r24, 0xFD	; 253
 226:	80 83       	st	Z, r24
 228:	80 81       	ld	r24, Z
 22a:	8e 7f       	andi	r24, 0xFE	; 254
 22c:	80 83       	st	Z, r24
 22e:	80 81       	ld	r24, Z
 230:	80 62       	ori	r24, 0x20	; 32
 232:	80 83       	st	Z, r24
 234:	80 b7       	in	r24, 0x30	; 48
 236:	80 68       	ori	r24, 0x80	; 128
 238:	80 bf       	out	0x30, r24	; 48
 23a:	78 94       	sei
 23c:	08 95       	ret

0000023e <select_adc_channel>:
 23e:	88 30       	cpi	r24, 0x08	; 8
 240:	38 f4       	brcc	.+14     	; 0x250 <select_adc_channel+0x12>
 242:	ec e7       	ldi	r30, 0x7C	; 124
 244:	f0 e0       	ldi	r31, 0x00	; 0
 246:	90 81       	ld	r25, Z
 248:	87 70       	andi	r24, 0x07	; 7
 24a:	89 2b       	or	r24, r25
 24c:	80 83       	st	Z, r24
 24e:	08 95       	ret
 250:	eb e7       	ldi	r30, 0x7B	; 123
 252:	f0 e0       	ldi	r31, 0x00	; 0
 254:	90 81       	ld	r25, Z
 256:	98 60       	ori	r25, 0x08	; 8
 258:	90 83       	st	Z, r25
 25a:	ec e7       	ldi	r30, 0x7C	; 124
 25c:	f0 e0       	ldi	r31, 0x00	; 0
 25e:	90 81       	ld	r25, Z
 260:	87 70       	andi	r24, 0x07	; 7
 262:	89 2b       	or	r24, r25
 264:	80 83       	st	Z, r24
 266:	08 95       	ret

00000268 <start_adc>:
 268:	ea e7       	ldi	r30, 0x7A	; 122
 26a:	f0 e0       	ldi	r31, 0x00	; 0
 26c:	80 81       	ld	r24, Z
 26e:	80 64       	ori	r24, 0x40	; 64
 270:	80 83       	st	Z, r24
 272:	08 95       	ret

00000274 <__vector_21>:


// read the ADC data after the conversion is complete


	ISR( ADC_vect ){
 274:	1f 92       	push	r1
 276:	0f 92       	push	r0
 278:	0f b6       	in	r0, 0x3f	; 63
 27a:	0f 92       	push	r0
 27c:	11 24       	eor	r1, r1
 27e:	2f 93       	push	r18
 280:	8f 93       	push	r24
 282:	9f 93       	push	r25
		adc_10bit_data = (ADCH_reg<<2)|(ADCL_reg>>6);
 284:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
 288:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	88 0f       	add	r24, r24
 290:	99 1f       	adc	r25, r25
 292:	88 0f       	add	r24, r24
 294:	99 1f       	adc	r25, r25
 296:	22 95       	swap	r18
 298:	26 95       	lsr	r18
 29a:	26 95       	lsr	r18
 29c:	23 70       	andi	r18, 0x03	; 3
 29e:	82 2b       	or	r24, r18
 2a0:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <__data_end+0x1>
 2a4:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__data_end>

	}
 2a8:	9f 91       	pop	r25
 2aa:	8f 91       	pop	r24
 2ac:	2f 91       	pop	r18
 2ae:	0f 90       	pop	r0
 2b0:	0f be       	out	0x3f, r0	; 63
 2b2:	0f 90       	pop	r0
 2b4:	1f 90       	pop	r1
 2b6:	18 95       	reti

000002b8 <convert_analog_channel_data>:
 */
void convert_analog_channel_data( unsigned char sensor_channel_number ){
	
	// << NOTE >> : You are not allowed to modify or change anything inside this function
	
	select_adc_channel( sensor_channel_number );
 2b8:	c2 df       	rcall	.-124    	; 0x23e <select_adc_channel>
	
	start_adc();
 2ba:	d6 cf       	rjmp	.-84     	; 0x268 <start_adc>
 2bc:	08 95       	ret

000002be <main>:
 2be:	cf 93       	push	r28
/**
 * @brief      Main Function
 *
 * @details    First Initializes the 2nd Sharp sensor and sends its ADC converted data on LCD and UART
 */
int main(void) {
 2c0:	df 93       	push	r29
 2c2:	cd b7       	in	r28, 0x3d	; 61
 2c4:	de b7       	in	r29, 0x3e	; 62
 2c6:	e2 97       	sbiw	r28, 0x32	; 50
 2c8:	0f b6       	in	r0, 0x3f	; 63
 2ca:	f8 94       	cli
 2cc:	de bf       	out	0x3e, r29	; 62
 2ce:	0f be       	out	0x3f, r0	; 63
 2d0:	cd bf       	out	0x3d, r28	; 61
	
	// << NOTE >> : You are not allowed to modify or change anything inside this function except a part of while loop
	
	sharp_sensor_pin_config();			// Initialize the 2nd Sharp sensor
 2d2:	67 df       	rcall	.-306    	; 0x1a2 <sharp_sensor_pin_config>
	
	adc_init();							// Initialize the ADC
 2d4:	69 df       	rcall	.-302    	; 0x1a8 <adc_init>
	
	lcd_port_config();					// Initialize the LCD port
 2d6:	41 d0       	rcall	.+130    	; 0x35a <lcd_port_config>
 2d8:	b9 d0       	rcall	.+370    	; 0x44c <lcd_init>
	lcd_init();							// Initialize the LCD
 2da:	87 e6       	ldi	r24, 0x67	; 103
	
	uart_init(UBRR_VALUE);				// Initialize the UART
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	27 d1       	rcall	.+590    	; 0x52e <uart_init>
 2e0:	80 e0       	ldi	r24, 0x00	; 0
	
	
	// To create string for transmitting 2nd Sharp sensor raw data and corresponding voltage over the UART and LCD
	char tx_raw_adc_data_buffer[25], tx_voltage_buffer[25], lcd_print_raw_adc_data_string[25], lcd_print_voltage_string[25];
	
	convert_analog_channel_data( sharp_sensor_channel );
 2e2:	ea df       	rcall	.-44     	; 0x2b8 <convert_analog_channel_data>
 2e4:	0f 2e       	mov	r0, r31
 2e6:	fa e7       	ldi	r31, 0x7A	; 122
	
	while(1)
	{
		if ( ( ADCSRA_reg & ( 1 << ADSC_bit ) ) != 0x40 )
 2e8:	8f 2e       	mov	r8, r31
 2ea:	91 2c       	mov	r9, r1
 2ec:	f0 2d       	mov	r31, r0
 2ee:	0f 2e       	mov	r0, r31
 2f0:	f0 e0       	ldi	r31, 0x00	; 0
			sharp_sensor_data = adc_10bit_data;
			adc_data_voltage_reading = (adc_10bit_data * 5)/1023;

			// ------------------------------- //
			
			sprintf(lcd_print_raw_adc_data_string, "Raw data: %04d", sharp_sensor_data);
 2f2:	af 2e       	mov	r10, r31
 2f4:	f1 e0       	ldi	r31, 0x01	; 1
 2f6:	bf 2e       	mov	r11, r31
 2f8:	f0 2d       	mov	r31, r0
 2fa:	8e 01       	movw	r16, r28
 2fc:	06 5e       	subi	r16, 0xE6	; 230
 2fe:	1f 4f       	sbci	r17, 0xFF	; 255
 300:	0f 2e       	mov	r0, r31
 302:	ff e0       	ldi	r31, 0x0F	; 15
			lcd_string(1, 1, lcd_print_raw_adc_data_string);
			
			sprintf(tx_raw_adc_data_buffer, "Raw data: %04d\t", sharp_sensor_data);
 304:	cf 2e       	mov	r12, r31
 306:	f1 e0       	ldi	r31, 0x01	; 1
 308:	df 2e       	mov	r13, r31
 30a:	f0 2d       	mov	r31, r0
 30c:	ce 01       	movw	r24, r28
 30e:	01 96       	adiw	r24, 0x01	; 1
 310:	7c 01       	movw	r14, r24
 312:	f4 01       	movw	r30, r8
 314:	80 81       	ld	r24, Z
	
	convert_analog_channel_data( sharp_sensor_channel );
	
	while(1)
	{
		if ( ( ADCSRA_reg & ( 1 << ADSC_bit ) ) != 0x40 )
 316:	86 fd       	sbrc	r24, 6
 318:	fc cf       	rjmp	.-8      	; 0x312 <main+0x54>
 31a:	70 90 20 01 	lds	r7, 0x0120	; 0x800120 <__data_end>
		{
			// ------------------------------- //
			float adc_data_voltage_reading;
			sharp_sensor_data = adc_10bit_data;
 31e:	60 90 21 01 	lds	r6, 0x0121	; 0x800121 <__data_end+0x1>
 322:	6f 92       	push	r6
 324:	7f 92       	push	r7
			adc_data_voltage_reading = (adc_10bit_data * 5)/1023;

			// ------------------------------- //
			
			sprintf(lcd_print_raw_adc_data_string, "Raw data: %04d", sharp_sensor_data);
 326:	bf 92       	push	r11
 328:	af 92       	push	r10
 32a:	1f 93       	push	r17
 32c:	0f 93       	push	r16
 32e:	e0 d5       	rcall	.+3008   	; 0xef0 <sprintf>
 330:	a8 01       	movw	r20, r16
			lcd_string(1, 1, lcd_print_raw_adc_data_string);
 332:	61 e0       	ldi	r22, 0x01	; 1
 334:	81 e0       	ldi	r24, 0x01	; 1
 336:	e0 d0       	rcall	.+448    	; 0x4f8 <lcd_string>
 338:	6f 92       	push	r6
			
			sprintf(tx_raw_adc_data_buffer, "Raw data: %04d\t", sharp_sensor_data);
 33a:	7f 92       	push	r7
 33c:	df 92       	push	r13
 33e:	cf 92       	push	r12
 340:	ff 92       	push	r15
 342:	ef 92       	push	r14
 344:	d5 d5       	rcall	.+2986   	; 0xef0 <sprintf>
			uart_tx_string(tx_raw_adc_data_buffer);
 346:	c7 01       	movw	r24, r14
 348:	08 d1       	rcall	.+528    	; 0x55a <uart_tx_string>
 34a:	80 e0       	ldi	r24, 0x00	; 0
			
			convert_analog_channel_data( sharp_sensor_channel );
 34c:	b5 df       	rcall	.-150    	; 0x2b8 <convert_analog_channel_data>
 34e:	0f b6       	in	r0, 0x3f	; 63
 350:	f8 94       	cli
 352:	de bf       	out	0x3e, r29	; 62
 354:	0f be       	out	0x3f, r0	; 63
 356:	cd bf       	out	0x3d, r28	; 61
 358:	dc cf       	rjmp	.-72     	; 0x312 <main+0x54>

0000035a <lcd_port_config>:
 35a:	84 b1       	in	r24, 0x04	; 4
 35c:	87 60       	ori	r24, 0x07	; 7
 * Logic: This function clears LCD by giving specific command as input to lcd_wr_command() function
 * Example Call: lcd_clear();
 */
void lcd_clear (void)
{
	lcd_wr_command(0x01);
 35e:	84 b9       	out	0x04, r24	; 4
 360:	8a b1       	in	r24, 0x0a	; 10
 362:	80 6f       	ori	r24, 0xF0	; 240
 364:	8a b9       	out	0x0a, r24	; 10
 366:	85 b1       	in	r24, 0x05	; 5
 368:	88 7f       	andi	r24, 0xF8	; 248
 36a:	85 b9       	out	0x05, r24	; 5
 36c:	8b b1       	in	r24, 0x0b	; 11
 36e:	8f 70       	andi	r24, 0x0F	; 15
 370:	8b b9       	out	0x0b, r24	; 11
 372:	08 95       	ret

00000374 <lcd_set_4bit>:
 374:	8f e9       	ldi	r24, 0x9F	; 159
 376:	9f e0       	ldi	r25, 0x0F	; 15
 378:	01 97       	sbiw	r24, 0x01	; 1
 37a:	f1 f7       	brne	.-4      	; 0x378 <lcd_set_4bit+0x4>
 37c:	00 c0       	rjmp	.+0      	; 0x37e <lcd_set_4bit+0xa>
 37e:	00 00       	nop
 380:	28 98       	cbi	0x05, 0	; 5
 382:	2a 98       	cbi	0x05, 2	; 5
 384:	80 e3       	ldi	r24, 0x30	; 48
 386:	8b b9       	out	0x0b, r24	; 11
 388:	29 9a       	sbi	0x05, 1	; 5
 38a:	ef e1       	ldi	r30, 0x1F	; 31
 38c:	fe e4       	ldi	r31, 0x4E	; 78
 38e:	31 97       	sbiw	r30, 0x01	; 1
 390:	f1 f7       	brne	.-4      	; 0x38e <lcd_set_4bit+0x1a>
 392:	00 c0       	rjmp	.+0      	; 0x394 <lcd_set_4bit+0x20>
 394:	00 00       	nop
 396:	29 98       	cbi	0x05, 1	; 5
 398:	ef e9       	ldi	r30, 0x9F	; 159
 39a:	ff e0       	ldi	r31, 0x0F	; 15
 39c:	31 97       	sbiw	r30, 0x01	; 1
 39e:	f1 f7       	brne	.-4      	; 0x39c <lcd_set_4bit+0x28>
 3a0:	00 c0       	rjmp	.+0      	; 0x3a2 <lcd_set_4bit+0x2e>
 3a2:	00 00       	nop
 3a4:	28 98       	cbi	0x05, 0	; 5
 3a6:	2a 98       	cbi	0x05, 2	; 5
 3a8:	8b b9       	out	0x0b, r24	; 11
 3aa:	29 9a       	sbi	0x05, 1	; 5
 3ac:	ef e1       	ldi	r30, 0x1F	; 31
 3ae:	fe e4       	ldi	r31, 0x4E	; 78
 3b0:	31 97       	sbiw	r30, 0x01	; 1
 3b2:	f1 f7       	brne	.-4      	; 0x3b0 <lcd_set_4bit+0x3c>
 3b4:	00 c0       	rjmp	.+0      	; 0x3b6 <lcd_set_4bit+0x42>
 3b6:	00 00       	nop
 3b8:	29 98       	cbi	0x05, 1	; 5
 3ba:	ef e9       	ldi	r30, 0x9F	; 159
 3bc:	ff e0       	ldi	r31, 0x0F	; 15
 3be:	31 97       	sbiw	r30, 0x01	; 1
 3c0:	f1 f7       	brne	.-4      	; 0x3be <lcd_set_4bit+0x4a>
 3c2:	00 c0       	rjmp	.+0      	; 0x3c4 <lcd_set_4bit+0x50>
 3c4:	00 00       	nop
 3c6:	28 98       	cbi	0x05, 0	; 5
 3c8:	2a 98       	cbi	0x05, 2	; 5
 3ca:	8b b9       	out	0x0b, r24	; 11
 3cc:	29 9a       	sbi	0x05, 1	; 5
 3ce:	8f e1       	ldi	r24, 0x1F	; 31
 3d0:	9e e4       	ldi	r25, 0x4E	; 78
 3d2:	01 97       	sbiw	r24, 0x01	; 1
 3d4:	f1 f7       	brne	.-4      	; 0x3d2 <lcd_set_4bit+0x5e>
 3d6:	00 c0       	rjmp	.+0      	; 0x3d8 <lcd_set_4bit+0x64>
 3d8:	00 00       	nop
 3da:	29 98       	cbi	0x05, 1	; 5
 3dc:	ef e9       	ldi	r30, 0x9F	; 159
 3de:	ff e0       	ldi	r31, 0x0F	; 15
 3e0:	31 97       	sbiw	r30, 0x01	; 1
 3e2:	f1 f7       	brne	.-4      	; 0x3e0 <lcd_set_4bit+0x6c>
 3e4:	00 c0       	rjmp	.+0      	; 0x3e6 <lcd_set_4bit+0x72>
 3e6:	00 00       	nop
 3e8:	28 98       	cbi	0x05, 0	; 5
 3ea:	2a 98       	cbi	0x05, 2	; 5
 3ec:	80 e2       	ldi	r24, 0x20	; 32
 3ee:	8b b9       	out	0x0b, r24	; 11
 3f0:	29 9a       	sbi	0x05, 1	; 5
 3f2:	8f e1       	ldi	r24, 0x1F	; 31
 3f4:	9e e4       	ldi	r25, 0x4E	; 78
 3f6:	01 97       	sbiw	r24, 0x01	; 1
 3f8:	f1 f7       	brne	.-4      	; 0x3f6 <lcd_set_4bit+0x82>
 3fa:	00 c0       	rjmp	.+0      	; 0x3fc <lcd_set_4bit+0x88>
 3fc:	00 00       	nop
 3fe:	29 98       	cbi	0x05, 1	; 5
 400:	08 95       	ret

00000402 <lcd_wr_command>:
 402:	9b b1       	in	r25, 0x0b	; 11
 404:	9f 70       	andi	r25, 0x0F	; 15
 406:	9b b9       	out	0x0b, r25	; 11
 408:	9b b1       	in	r25, 0x0b	; 11
 40a:	28 2f       	mov	r18, r24
 40c:	20 7f       	andi	r18, 0xF0	; 240
 40e:	92 2b       	or	r25, r18
 410:	9b b9       	out	0x0b, r25	; 11
 412:	28 98       	cbi	0x05, 0	; 5
 414:	2a 98       	cbi	0x05, 2	; 5
 416:	29 9a       	sbi	0x05, 1	; 5
 418:	ef e1       	ldi	r30, 0x1F	; 31
 41a:	fe e4       	ldi	r31, 0x4E	; 78
 41c:	31 97       	sbiw	r30, 0x01	; 1
 41e:	f1 f7       	brne	.-4      	; 0x41c <lcd_wr_command+0x1a>
 420:	00 c0       	rjmp	.+0      	; 0x422 <lcd_wr_command+0x20>
 422:	00 00       	nop
 424:	29 98       	cbi	0x05, 1	; 5
 426:	9b b1       	in	r25, 0x0b	; 11
 428:	9f 70       	andi	r25, 0x0F	; 15
 42a:	9b b9       	out	0x0b, r25	; 11
 42c:	9b b1       	in	r25, 0x0b	; 11
 42e:	82 95       	swap	r24
 430:	80 7f       	andi	r24, 0xF0	; 240
 432:	89 2b       	or	r24, r25
 434:	8b b9       	out	0x0b, r24	; 11
 436:	28 98       	cbi	0x05, 0	; 5
 438:	2a 98       	cbi	0x05, 2	; 5
 43a:	29 9a       	sbi	0x05, 1	; 5
 43c:	8f e1       	ldi	r24, 0x1F	; 31
 43e:	9e e4       	ldi	r25, 0x4E	; 78
 440:	01 97       	sbiw	r24, 0x01	; 1
 442:	f1 f7       	brne	.-4      	; 0x440 <lcd_wr_command+0x3e>
 444:	00 c0       	rjmp	.+0      	; 0x446 <lcd_wr_command+0x44>
 446:	00 00       	nop
 448:	29 98       	cbi	0x05, 1	; 5
 44a:	08 95       	ret

0000044c <lcd_init>:
 44c:	93 df       	rcall	.-218    	; 0x374 <lcd_set_4bit>
 44e:	8f e9       	ldi	r24, 0x9F	; 159
 450:	9f e0       	ldi	r25, 0x0F	; 15
 452:	01 97       	sbiw	r24, 0x01	; 1
 454:	f1 f7       	brne	.-4      	; 0x452 <lcd_init+0x6>
 456:	00 c0       	rjmp	.+0      	; 0x458 <lcd_init+0xc>
 458:	00 00       	nop
 45a:	88 e2       	ldi	r24, 0x28	; 40
 45c:	d2 df       	rcall	.-92     	; 0x402 <lcd_wr_command>
 45e:	81 e0       	ldi	r24, 0x01	; 1
 460:	d0 df       	rcall	.-96     	; 0x402 <lcd_wr_command>
 462:	86 e0       	ldi	r24, 0x06	; 6
 464:	ce df       	rcall	.-100    	; 0x402 <lcd_wr_command>
 466:	8e e0       	ldi	r24, 0x0E	; 14
 468:	cc df       	rcall	.-104    	; 0x402 <lcd_wr_command>
 46a:	80 e8       	ldi	r24, 0x80	; 128
 46c:	ca cf       	rjmp	.-108    	; 0x402 <lcd_wr_command>
 46e:	08 95       	ret

00000470 <lcd_cursor>:
 470:	82 30       	cpi	r24, 0x02	; 2
 472:	69 f0       	breq	.+26     	; 0x48e <lcd_cursor+0x1e>
 474:	18 f4       	brcc	.+6      	; 0x47c <lcd_cursor+0xc>
 476:	81 30       	cpi	r24, 0x01	; 1
 478:	31 f0       	breq	.+12     	; 0x486 <lcd_cursor+0x16>
 47a:	08 95       	ret
 47c:	83 30       	cpi	r24, 0x03	; 3
 47e:	59 f0       	breq	.+22     	; 0x496 <lcd_cursor+0x26>
 480:	84 30       	cpi	r24, 0x04	; 4
 482:	69 f0       	breq	.+26     	; 0x49e <lcd_cursor+0x2e>
 484:	08 95       	ret
 486:	8f e7       	ldi	r24, 0x7F	; 127
 488:	86 0f       	add	r24, r22
 48a:	bb cf       	rjmp	.-138    	; 0x402 <lcd_wr_command>
 48c:	08 95       	ret
 48e:	8f eb       	ldi	r24, 0xBF	; 191
 490:	86 0f       	add	r24, r22
 492:	b7 cf       	rjmp	.-146    	; 0x402 <lcd_wr_command>
 494:	08 95       	ret
 496:	83 e9       	ldi	r24, 0x93	; 147
 498:	86 0f       	add	r24, r22
 49a:	b3 cf       	rjmp	.-154    	; 0x402 <lcd_wr_command>
 49c:	08 95       	ret
 49e:	83 ed       	ldi	r24, 0xD3	; 211
 4a0:	86 0f       	add	r24, r22
 4a2:	af cf       	rjmp	.-162    	; 0x402 <lcd_wr_command>
 4a4:	08 95       	ret

000004a6 <lcd_wr_char>:
 * Output: None
 * Logic: This function prints an alpha-numeric character at specified (row, column) position on LCD
 * Example Call: lcd_wr_char(1, 4, 'A') => to write character 'A' to the LCD
 */
void lcd_wr_char(char row, char column, char alpha_num_char)
{
 4a6:	cf 93       	push	r28
 4a8:	c4 2f       	mov	r28, r20
	lcd_cursor (row, column);
 4aa:	e2 df       	rcall	.-60     	; 0x470 <lcd_cursor>
	
	char temp;
	
	temp = alpha_num_char;
	temp = (temp & 0xF0);
	lcd_data_port_reg &= 0x0F;
 4ac:	8b b1       	in	r24, 0x0b	; 11
 4ae:	8f 70       	andi	r24, 0x0F	; 15
 4b0:	8b b9       	out	0x0b, r24	; 11
	lcd_data_port_reg |= temp;
 4b2:	8b b1       	in	r24, 0x0b	; 11
 4b4:	9c 2f       	mov	r25, r28
 4b6:	90 7f       	andi	r25, 0xF0	; 240
 4b8:	89 2b       	or	r24, r25
 4ba:	8b b9       	out	0x0b, r24	; 11
	
	sbit( lcd_control_port_reg, RS_pin );				// RS = 0 --- Data Input
 4bc:	28 9a       	sbi	0x05, 0	; 5
	cbit( lcd_control_port_reg, RW_pin );				// RW = 0 --- Writing to LCD
 4be:	2a 98       	cbi	0x05, 2	; 5
	sbit( lcd_control_port_reg, EN_pin );				// Set Enable Pin
 4c0:	29 9a       	sbi	0x05, 1	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4c2:	8f e1       	ldi	r24, 0x1F	; 31
 4c4:	9e e4       	ldi	r25, 0x4E	; 78
 4c6:	01 97       	sbiw	r24, 0x01	; 1
 4c8:	f1 f7       	brne	.-4      	; 0x4c6 <lcd_wr_char+0x20>
 4ca:	00 c0       	rjmp	.+0      	; 0x4cc <lcd_wr_char+0x26>
 4cc:	00 00       	nop
	_delay_ms(5);										// Delay
	cbit( lcd_control_port_reg, EN_pin );				// Clear Enable Pin
 4ce:	29 98       	cbi	0x05, 1	; 5
	
	alpha_num_char = (alpha_num_char & 0x0F);
	alpha_num_char = (alpha_num_char << 4);
	lcd_data_port_reg &= 0x0F;
 4d0:	8b b1       	in	r24, 0x0b	; 11
 4d2:	8f 70       	andi	r24, 0x0F	; 15
 4d4:	8b b9       	out	0x0b, r24	; 11
	lcd_data_port_reg |= alpha_num_char;
 4d6:	8b b1       	in	r24, 0x0b	; 11
 4d8:	c2 95       	swap	r28
 4da:	c0 7f       	andi	r28, 0xF0	; 240
 4dc:	c8 2b       	or	r28, r24
 4de:	cb b9       	out	0x0b, r28	; 11
	
	sbit( lcd_control_port_reg, RS_pin );				// RS = 0 --- Data Input
 4e0:	28 9a       	sbi	0x05, 0	; 5
	cbit( lcd_control_port_reg, RW_pin );				// RW = 0 --- Writing to LCD
 4e2:	2a 98       	cbi	0x05, 2	; 5
	sbit( lcd_control_port_reg, EN_pin );				// Set Enable Pin
 4e4:	29 9a       	sbi	0x05, 1	; 5
 4e6:	8f e1       	ldi	r24, 0x1F	; 31
 4e8:	9e e4       	ldi	r25, 0x4E	; 78
 4ea:	01 97       	sbiw	r24, 0x01	; 1
 4ec:	f1 f7       	brne	.-4      	; 0x4ea <lcd_wr_char+0x44>
 4ee:	00 c0       	rjmp	.+0      	; 0x4f0 <lcd_wr_char+0x4a>
 4f0:	00 00       	nop
	_delay_ms(5);										// Delay
	cbit( lcd_control_port_reg, EN_pin );				// Clear Enable Pin
 4f2:	29 98       	cbi	0x05, 1	; 5
}
 4f4:	cf 91       	pop	r28
 4f6:	08 95       	ret

000004f8 <lcd_string>:
 * Output: This function prints the given string on the LCD at the specified (row, column) position
 * Logic: Positions the cursor and prints each character on LCD in a while loop until EOF is reached
 * Example Call: lcd_string(1, 1, "Hello !");
 */
void lcd_string(char row, char column, char *str)
{
 4f8:	0f 93       	push	r16
 4fa:	1f 93       	push	r17
 4fc:	cf 93       	push	r28
 4fe:	df 93       	push	r29
 500:	d8 2f       	mov	r29, r24
 502:	c6 2f       	mov	r28, r22
 504:	fa 01       	movw	r30, r20
	while(*str != '\0')
 506:	40 81       	ld	r20, Z
 508:	44 23       	and	r20, r20
 50a:	61 f0       	breq	.+24     	; 0x524 <lcd_string+0x2c>
 50c:	8f 01       	movw	r16, r30
 50e:	0f 5f       	subi	r16, 0xFF	; 255
 510:	1f 4f       	sbci	r17, 0xFF	; 255
	{
		lcd_wr_char(row, column, *str);
 512:	6c 2f       	mov	r22, r28
 514:	8d 2f       	mov	r24, r29
 516:	c7 df       	rcall	.-114    	; 0x4a6 <lcd_wr_char>
		str++;
		column+=1;
 518:	cf 5f       	subi	r28, 0xFF	; 255
 * Logic: Positions the cursor and prints each character on LCD in a while loop until EOF is reached
 * Example Call: lcd_string(1, 1, "Hello !");
 */
void lcd_string(char row, char column, char *str)
{
	while(*str != '\0')
 51a:	f8 01       	movw	r30, r16
 51c:	41 91       	ld	r20, Z+
 51e:	8f 01       	movw	r16, r30
 520:	41 11       	cpse	r20, r1
 522:	f7 cf       	rjmp	.-18     	; 0x512 <lcd_string+0x1a>
	{
		lcd_wr_char(row, column, *str);
		str++;
		column+=1;
	}
}
 524:	df 91       	pop	r29
 526:	cf 91       	pop	r28
 528:	1f 91       	pop	r17
 52a:	0f 91       	pop	r16
 52c:	08 95       	ret

0000052e <uart_init>:
 * Example Call: uart_tx();
 */
void uart_tx(char data)
{
	//while( ( UCSRA_reg & ( 1 << UDRE_bit ) ) == 0x00 );				// waiting to transmit	
	UDR_reg	= data;
 52e:	e1 ec       	ldi	r30, 0xC1	; 193
 530:	f0 e0       	ldi	r31, 0x00	; 0
 532:	10 82       	st	Z, r1
 534:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
 538:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
 53c:	a2 ec       	ldi	r26, 0xC2	; 194
 53e:	b0 e0       	ldi	r27, 0x00	; 0
 540:	8c 91       	ld	r24, X
 542:	8f 73       	andi	r24, 0x3F	; 63
 544:	8c 93       	st	X, r24
 546:	8c 91       	ld	r24, X
 548:	86 60       	ori	r24, 0x06	; 6
 54a:	8c 93       	st	X, r24
 54c:	80 81       	ld	r24, Z
 54e:	88 61       	ori	r24, 0x18	; 24
 550:	80 83       	st	Z, r24
 552:	80 81       	ld	r24, Z
 554:	8b 7f       	andi	r24, 0xFB	; 251
 556:	80 83       	st	Z, r24
 558:	08 95       	ret

0000055a <uart_tx_string>:
 * Output: None
 * Logic: This function sends a string over the UART
 * Example Call: uart_tx_string();
 */
void uart_tx_string(char *data)
{
 55a:	fc 01       	movw	r30, r24
	while(*data != '\0')
 55c:	90 81       	ld	r25, Z
 55e:	99 23       	and	r25, r25
 560:	39 f0       	breq	.+14     	; 0x570 <uart_tx_string+0x16>
 562:	31 96       	adiw	r30, 0x01	; 1
 * Example Call: uart_tx();
 */
void uart_tx(char data)
{
	//while( ( UCSRA_reg & ( 1 << UDRE_bit ) ) == 0x00 );				// waiting to transmit	
	UDR_reg	= data;
 564:	a6 ec       	ldi	r26, 0xC6	; 198
 566:	b0 e0       	ldi	r27, 0x00	; 0
 568:	9c 93       	st	X, r25
 * Logic: This function sends a string over the UART
 * Example Call: uart_tx_string();
 */
void uart_tx_string(char *data)
{
	while(*data != '\0')
 56a:	91 91       	ld	r25, Z+
 56c:	91 11       	cpse	r25, r1
 56e:	fc cf       	rjmp	.-8      	; 0x568 <uart_tx_string+0xe>
 570:	08 95       	ret

00000572 <vfprintf>:
 572:	a0 e1       	ldi	r26, 0x10	; 16
 574:	b0 e0       	ldi	r27, 0x00	; 0
 576:	ee eb       	ldi	r30, 0xBE	; 190
 578:	f2 e0       	ldi	r31, 0x02	; 2
 57a:	59 c3       	rjmp	.+1714   	; 0xc2e <__prologue_saves__>
 57c:	7c 01       	movw	r14, r24
 57e:	1b 01       	movw	r2, r22
 580:	6a 01       	movw	r12, r20
 582:	fc 01       	movw	r30, r24
 584:	17 82       	std	Z+7, r1	; 0x07
 586:	16 82       	std	Z+6, r1	; 0x06
 588:	83 81       	ldd	r24, Z+3	; 0x03
 58a:	81 ff       	sbrs	r24, 1
 58c:	2a c3       	rjmp	.+1620   	; 0xbe2 <__stack+0x2e3>
 58e:	9e 01       	movw	r18, r28
 590:	2f 5f       	subi	r18, 0xFF	; 255
 592:	3f 4f       	sbci	r19, 0xFF	; 255
 594:	39 01       	movw	r6, r18
 596:	f7 01       	movw	r30, r14
 598:	93 81       	ldd	r25, Z+3	; 0x03
 59a:	f1 01       	movw	r30, r2
 59c:	93 fd       	sbrc	r25, 3
 59e:	85 91       	lpm	r24, Z+
 5a0:	93 ff       	sbrs	r25, 3
 5a2:	81 91       	ld	r24, Z+
 5a4:	1f 01       	movw	r2, r30
 5a6:	88 23       	and	r24, r24
 5a8:	09 f4       	brne	.+2      	; 0x5ac <vfprintf+0x3a>
 5aa:	17 c3       	rjmp	.+1582   	; 0xbda <__stack+0x2db>
 5ac:	85 32       	cpi	r24, 0x25	; 37
 5ae:	39 f4       	brne	.+14     	; 0x5be <vfprintf+0x4c>
 5b0:	93 fd       	sbrc	r25, 3
 5b2:	85 91       	lpm	r24, Z+
 5b4:	93 ff       	sbrs	r25, 3
 5b6:	81 91       	ld	r24, Z+
 5b8:	1f 01       	movw	r2, r30
 5ba:	85 32       	cpi	r24, 0x25	; 37
 5bc:	31 f4       	brne	.+12     	; 0x5ca <vfprintf+0x58>
 5be:	b7 01       	movw	r22, r14
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	5a d4       	rcall	.+2228   	; 0xe78 <fputc>
 5c4:	56 01       	movw	r10, r12
 5c6:	65 01       	movw	r12, r10
 5c8:	e6 cf       	rjmp	.-52     	; 0x596 <vfprintf+0x24>
 5ca:	10 e0       	ldi	r17, 0x00	; 0
 5cc:	51 2c       	mov	r5, r1
 5ce:	91 2c       	mov	r9, r1
 5d0:	ff e1       	ldi	r31, 0x1F	; 31
 5d2:	f9 15       	cp	r31, r9
 5d4:	d8 f0       	brcs	.+54     	; 0x60c <vfprintf+0x9a>
 5d6:	8b 32       	cpi	r24, 0x2B	; 43
 5d8:	79 f0       	breq	.+30     	; 0x5f8 <vfprintf+0x86>
 5da:	38 f4       	brcc	.+14     	; 0x5ea <vfprintf+0x78>
 5dc:	80 32       	cpi	r24, 0x20	; 32
 5de:	79 f0       	breq	.+30     	; 0x5fe <vfprintf+0x8c>
 5e0:	83 32       	cpi	r24, 0x23	; 35
 5e2:	a1 f4       	brne	.+40     	; 0x60c <vfprintf+0x9a>
 5e4:	f9 2d       	mov	r31, r9
 5e6:	f0 61       	ori	r31, 0x10	; 16
 5e8:	2e c0       	rjmp	.+92     	; 0x646 <vfprintf+0xd4>
 5ea:	8d 32       	cpi	r24, 0x2D	; 45
 5ec:	61 f0       	breq	.+24     	; 0x606 <vfprintf+0x94>
 5ee:	80 33       	cpi	r24, 0x30	; 48
 5f0:	69 f4       	brne	.+26     	; 0x60c <vfprintf+0x9a>
 5f2:	29 2d       	mov	r18, r9
 5f4:	21 60       	ori	r18, 0x01	; 1
 5f6:	2d c0       	rjmp	.+90     	; 0x652 <vfprintf+0xe0>
 5f8:	39 2d       	mov	r19, r9
 5fa:	32 60       	ori	r19, 0x02	; 2
 5fc:	93 2e       	mov	r9, r19
 5fe:	89 2d       	mov	r24, r9
 600:	84 60       	ori	r24, 0x04	; 4
 602:	98 2e       	mov	r9, r24
 604:	2a c0       	rjmp	.+84     	; 0x65a <vfprintf+0xe8>
 606:	e9 2d       	mov	r30, r9
 608:	e8 60       	ori	r30, 0x08	; 8
 60a:	15 c0       	rjmp	.+42     	; 0x636 <vfprintf+0xc4>
 60c:	97 fc       	sbrc	r9, 7
 60e:	2d c0       	rjmp	.+90     	; 0x66a <vfprintf+0xf8>
 610:	20 ed       	ldi	r18, 0xD0	; 208
 612:	28 0f       	add	r18, r24
 614:	2a 30       	cpi	r18, 0x0A	; 10
 616:	88 f4       	brcc	.+34     	; 0x63a <vfprintf+0xc8>
 618:	96 fe       	sbrs	r9, 6
 61a:	06 c0       	rjmp	.+12     	; 0x628 <vfprintf+0xb6>
 61c:	3a e0       	ldi	r19, 0x0A	; 10
 61e:	13 9f       	mul	r17, r19
 620:	20 0d       	add	r18, r0
 622:	11 24       	eor	r1, r1
 624:	12 2f       	mov	r17, r18
 626:	19 c0       	rjmp	.+50     	; 0x65a <vfprintf+0xe8>
 628:	8a e0       	ldi	r24, 0x0A	; 10
 62a:	58 9e       	mul	r5, r24
 62c:	20 0d       	add	r18, r0
 62e:	11 24       	eor	r1, r1
 630:	52 2e       	mov	r5, r18
 632:	e9 2d       	mov	r30, r9
 634:	e0 62       	ori	r30, 0x20	; 32
 636:	9e 2e       	mov	r9, r30
 638:	10 c0       	rjmp	.+32     	; 0x65a <vfprintf+0xe8>
 63a:	8e 32       	cpi	r24, 0x2E	; 46
 63c:	31 f4       	brne	.+12     	; 0x64a <vfprintf+0xd8>
 63e:	96 fc       	sbrc	r9, 6
 640:	cc c2       	rjmp	.+1432   	; 0xbda <__stack+0x2db>
 642:	f9 2d       	mov	r31, r9
 644:	f0 64       	ori	r31, 0x40	; 64
 646:	9f 2e       	mov	r9, r31
 648:	08 c0       	rjmp	.+16     	; 0x65a <vfprintf+0xe8>
 64a:	8c 36       	cpi	r24, 0x6C	; 108
 64c:	21 f4       	brne	.+8      	; 0x656 <vfprintf+0xe4>
 64e:	29 2d       	mov	r18, r9
 650:	20 68       	ori	r18, 0x80	; 128
 652:	92 2e       	mov	r9, r18
 654:	02 c0       	rjmp	.+4      	; 0x65a <vfprintf+0xe8>
 656:	88 36       	cpi	r24, 0x68	; 104
 658:	41 f4       	brne	.+16     	; 0x66a <vfprintf+0xf8>
 65a:	f1 01       	movw	r30, r2
 65c:	93 fd       	sbrc	r25, 3
 65e:	85 91       	lpm	r24, Z+
 660:	93 ff       	sbrs	r25, 3
 662:	81 91       	ld	r24, Z+
 664:	1f 01       	movw	r2, r30
 666:	81 11       	cpse	r24, r1
 668:	b3 cf       	rjmp	.-154    	; 0x5d0 <vfprintf+0x5e>
 66a:	9b eb       	ldi	r25, 0xBB	; 187
 66c:	98 0f       	add	r25, r24
 66e:	93 30       	cpi	r25, 0x03	; 3
 670:	20 f4       	brcc	.+8      	; 0x67a <vfprintf+0x108>
 672:	99 2d       	mov	r25, r9
 674:	90 61       	ori	r25, 0x10	; 16
 676:	80 5e       	subi	r24, 0xE0	; 224
 678:	07 c0       	rjmp	.+14     	; 0x688 <vfprintf+0x116>
 67a:	9b e9       	ldi	r25, 0x9B	; 155
 67c:	98 0f       	add	r25, r24
 67e:	93 30       	cpi	r25, 0x03	; 3
 680:	08 f0       	brcs	.+2      	; 0x684 <vfprintf+0x112>
 682:	59 c1       	rjmp	.+690    	; 0x936 <__stack+0x37>
 684:	99 2d       	mov	r25, r9
 686:	9f 7e       	andi	r25, 0xEF	; 239
 688:	96 ff       	sbrs	r25, 6
 68a:	16 e0       	ldi	r17, 0x06	; 6
 68c:	9f 73       	andi	r25, 0x3F	; 63
 68e:	99 2e       	mov	r9, r25
 690:	85 36       	cpi	r24, 0x65	; 101
 692:	19 f4       	brne	.+6      	; 0x69a <vfprintf+0x128>
 694:	90 64       	ori	r25, 0x40	; 64
 696:	99 2e       	mov	r9, r25
 698:	08 c0       	rjmp	.+16     	; 0x6aa <vfprintf+0x138>
 69a:	86 36       	cpi	r24, 0x66	; 102
 69c:	21 f4       	brne	.+8      	; 0x6a6 <vfprintf+0x134>
 69e:	39 2f       	mov	r19, r25
 6a0:	30 68       	ori	r19, 0x80	; 128
 6a2:	93 2e       	mov	r9, r19
 6a4:	02 c0       	rjmp	.+4      	; 0x6aa <vfprintf+0x138>
 6a6:	11 11       	cpse	r17, r1
 6a8:	11 50       	subi	r17, 0x01	; 1
 6aa:	97 fe       	sbrs	r9, 7
 6ac:	07 c0       	rjmp	.+14     	; 0x6bc <vfprintf+0x14a>
 6ae:	1c 33       	cpi	r17, 0x3C	; 60
 6b0:	50 f4       	brcc	.+20     	; 0x6c6 <vfprintf+0x154>
 6b2:	44 24       	eor	r4, r4
 6b4:	43 94       	inc	r4
 6b6:	41 0e       	add	r4, r17
 6b8:	27 e0       	ldi	r18, 0x07	; 7
 6ba:	0b c0       	rjmp	.+22     	; 0x6d2 <vfprintf+0x160>
 6bc:	18 30       	cpi	r17, 0x08	; 8
 6be:	38 f0       	brcs	.+14     	; 0x6ce <vfprintf+0x15c>
 6c0:	27 e0       	ldi	r18, 0x07	; 7
 6c2:	17 e0       	ldi	r17, 0x07	; 7
 6c4:	05 c0       	rjmp	.+10     	; 0x6d0 <vfprintf+0x15e>
 6c6:	27 e0       	ldi	r18, 0x07	; 7
 6c8:	9c e3       	ldi	r25, 0x3C	; 60
 6ca:	49 2e       	mov	r4, r25
 6cc:	02 c0       	rjmp	.+4      	; 0x6d2 <vfprintf+0x160>
 6ce:	21 2f       	mov	r18, r17
 6d0:	41 2c       	mov	r4, r1
 6d2:	56 01       	movw	r10, r12
 6d4:	84 e0       	ldi	r24, 0x04	; 4
 6d6:	a8 0e       	add	r10, r24
 6d8:	b1 1c       	adc	r11, r1
 6da:	f6 01       	movw	r30, r12
 6dc:	60 81       	ld	r22, Z
 6de:	71 81       	ldd	r23, Z+1	; 0x01
 6e0:	82 81       	ldd	r24, Z+2	; 0x02
 6e2:	93 81       	ldd	r25, Z+3	; 0x03
 6e4:	04 2d       	mov	r16, r4
 6e6:	a3 01       	movw	r20, r6
 6e8:	d9 d2       	rcall	.+1458   	; 0xc9c <__ftoa_engine>
 6ea:	6c 01       	movw	r12, r24
 6ec:	f9 81       	ldd	r31, Y+1	; 0x01
 6ee:	fc 87       	std	Y+12, r31	; 0x0c
 6f0:	f0 ff       	sbrs	r31, 0
 6f2:	02 c0       	rjmp	.+4      	; 0x6f8 <vfprintf+0x186>
 6f4:	f3 ff       	sbrs	r31, 3
 6f6:	06 c0       	rjmp	.+12     	; 0x704 <vfprintf+0x192>
 6f8:	91 fc       	sbrc	r9, 1
 6fa:	06 c0       	rjmp	.+12     	; 0x708 <vfprintf+0x196>
 6fc:	92 fe       	sbrs	r9, 2
 6fe:	06 c0       	rjmp	.+12     	; 0x70c <vfprintf+0x19a>
 700:	00 e2       	ldi	r16, 0x20	; 32
 702:	05 c0       	rjmp	.+10     	; 0x70e <vfprintf+0x19c>
 704:	0d e2       	ldi	r16, 0x2D	; 45
 706:	03 c0       	rjmp	.+6      	; 0x70e <vfprintf+0x19c>
 708:	0b e2       	ldi	r16, 0x2B	; 43
 70a:	01 c0       	rjmp	.+2      	; 0x70e <vfprintf+0x19c>
 70c:	00 e0       	ldi	r16, 0x00	; 0
 70e:	8c 85       	ldd	r24, Y+12	; 0x0c
 710:	8c 70       	andi	r24, 0x0C	; 12
 712:	19 f0       	breq	.+6      	; 0x71a <vfprintf+0x1a8>
 714:	01 11       	cpse	r16, r1
 716:	43 c2       	rjmp	.+1158   	; 0xb9e <__stack+0x29f>
 718:	80 c2       	rjmp	.+1280   	; 0xc1a <__stack+0x31b>
 71a:	97 fe       	sbrs	r9, 7
 71c:	10 c0       	rjmp	.+32     	; 0x73e <vfprintf+0x1cc>
 71e:	4c 0c       	add	r4, r12
 720:	fc 85       	ldd	r31, Y+12	; 0x0c
 722:	f4 ff       	sbrs	r31, 4
 724:	04 c0       	rjmp	.+8      	; 0x72e <vfprintf+0x1bc>
 726:	8a 81       	ldd	r24, Y+2	; 0x02
 728:	81 33       	cpi	r24, 0x31	; 49
 72a:	09 f4       	brne	.+2      	; 0x72e <vfprintf+0x1bc>
 72c:	4a 94       	dec	r4
 72e:	14 14       	cp	r1, r4
 730:	74 f5       	brge	.+92     	; 0x78e <vfprintf+0x21c>
 732:	28 e0       	ldi	r18, 0x08	; 8
 734:	24 15       	cp	r18, r4
 736:	78 f5       	brcc	.+94     	; 0x796 <vfprintf+0x224>
 738:	88 e0       	ldi	r24, 0x08	; 8
 73a:	48 2e       	mov	r4, r24
 73c:	2c c0       	rjmp	.+88     	; 0x796 <vfprintf+0x224>
 73e:	96 fc       	sbrc	r9, 6
 740:	2a c0       	rjmp	.+84     	; 0x796 <vfprintf+0x224>
 742:	81 2f       	mov	r24, r17
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	8c 15       	cp	r24, r12
 748:	9d 05       	cpc	r25, r13
 74a:	9c f0       	brlt	.+38     	; 0x772 <vfprintf+0x200>
 74c:	3c ef       	ldi	r19, 0xFC	; 252
 74e:	c3 16       	cp	r12, r19
 750:	3f ef       	ldi	r19, 0xFF	; 255
 752:	d3 06       	cpc	r13, r19
 754:	74 f0       	brlt	.+28     	; 0x772 <vfprintf+0x200>
 756:	89 2d       	mov	r24, r9
 758:	80 68       	ori	r24, 0x80	; 128
 75a:	98 2e       	mov	r9, r24
 75c:	0a c0       	rjmp	.+20     	; 0x772 <vfprintf+0x200>
 75e:	e2 e0       	ldi	r30, 0x02	; 2
 760:	f0 e0       	ldi	r31, 0x00	; 0
 762:	ec 0f       	add	r30, r28
 764:	fd 1f       	adc	r31, r29
 766:	e1 0f       	add	r30, r17
 768:	f1 1d       	adc	r31, r1
 76a:	80 81       	ld	r24, Z
 76c:	80 33       	cpi	r24, 0x30	; 48
 76e:	19 f4       	brne	.+6      	; 0x776 <vfprintf+0x204>
 770:	11 50       	subi	r17, 0x01	; 1
 772:	11 11       	cpse	r17, r1
 774:	f4 cf       	rjmp	.-24     	; 0x75e <vfprintf+0x1ec>
 776:	97 fe       	sbrs	r9, 7
 778:	0e c0       	rjmp	.+28     	; 0x796 <vfprintf+0x224>
 77a:	44 24       	eor	r4, r4
 77c:	43 94       	inc	r4
 77e:	41 0e       	add	r4, r17
 780:	81 2f       	mov	r24, r17
 782:	90 e0       	ldi	r25, 0x00	; 0
 784:	c8 16       	cp	r12, r24
 786:	d9 06       	cpc	r13, r25
 788:	2c f4       	brge	.+10     	; 0x794 <vfprintf+0x222>
 78a:	1c 19       	sub	r17, r12
 78c:	04 c0       	rjmp	.+8      	; 0x796 <vfprintf+0x224>
 78e:	44 24       	eor	r4, r4
 790:	43 94       	inc	r4
 792:	01 c0       	rjmp	.+2      	; 0x796 <vfprintf+0x224>
 794:	10 e0       	ldi	r17, 0x00	; 0
 796:	97 fe       	sbrs	r9, 7
 798:	06 c0       	rjmp	.+12     	; 0x7a6 <vfprintf+0x234>
 79a:	1c 14       	cp	r1, r12
 79c:	1d 04       	cpc	r1, r13
 79e:	34 f4       	brge	.+12     	; 0x7ac <vfprintf+0x23a>
 7a0:	c6 01       	movw	r24, r12
 7a2:	01 96       	adiw	r24, 0x01	; 1
 7a4:	05 c0       	rjmp	.+10     	; 0x7b0 <vfprintf+0x23e>
 7a6:	85 e0       	ldi	r24, 0x05	; 5
 7a8:	90 e0       	ldi	r25, 0x00	; 0
 7aa:	02 c0       	rjmp	.+4      	; 0x7b0 <vfprintf+0x23e>
 7ac:	81 e0       	ldi	r24, 0x01	; 1
 7ae:	90 e0       	ldi	r25, 0x00	; 0
 7b0:	01 11       	cpse	r16, r1
 7b2:	01 96       	adiw	r24, 0x01	; 1
 7b4:	11 23       	and	r17, r17
 7b6:	31 f0       	breq	.+12     	; 0x7c4 <vfprintf+0x252>
 7b8:	21 2f       	mov	r18, r17
 7ba:	30 e0       	ldi	r19, 0x00	; 0
 7bc:	2f 5f       	subi	r18, 0xFF	; 255
 7be:	3f 4f       	sbci	r19, 0xFF	; 255
 7c0:	82 0f       	add	r24, r18
 7c2:	93 1f       	adc	r25, r19
 7c4:	25 2d       	mov	r18, r5
 7c6:	30 e0       	ldi	r19, 0x00	; 0
 7c8:	82 17       	cp	r24, r18
 7ca:	93 07       	cpc	r25, r19
 7cc:	14 f4       	brge	.+4      	; 0x7d2 <vfprintf+0x260>
 7ce:	58 1a       	sub	r5, r24
 7d0:	01 c0       	rjmp	.+2      	; 0x7d4 <vfprintf+0x262>
 7d2:	51 2c       	mov	r5, r1
 7d4:	89 2d       	mov	r24, r9
 7d6:	89 70       	andi	r24, 0x09	; 9
 7d8:	41 f4       	brne	.+16     	; 0x7ea <vfprintf+0x278>
 7da:	55 20       	and	r5, r5
 7dc:	31 f0       	breq	.+12     	; 0x7ea <vfprintf+0x278>
 7de:	b7 01       	movw	r22, r14
 7e0:	80 e2       	ldi	r24, 0x20	; 32
 7e2:	90 e0       	ldi	r25, 0x00	; 0
 7e4:	49 d3       	rcall	.+1682   	; 0xe78 <fputc>
 7e6:	5a 94       	dec	r5
 7e8:	f8 cf       	rjmp	.-16     	; 0x7da <vfprintf+0x268>
 7ea:	00 23       	and	r16, r16
 7ec:	21 f0       	breq	.+8      	; 0x7f6 <vfprintf+0x284>
 7ee:	b7 01       	movw	r22, r14
 7f0:	80 2f       	mov	r24, r16
 7f2:	90 e0       	ldi	r25, 0x00	; 0
 7f4:	41 d3       	rcall	.+1666   	; 0xe78 <fputc>
 7f6:	93 fc       	sbrc	r9, 3
 7f8:	08 c0       	rjmp	.+16     	; 0x80a <vfprintf+0x298>
 7fa:	55 20       	and	r5, r5
 7fc:	31 f0       	breq	.+12     	; 0x80a <vfprintf+0x298>
 7fe:	b7 01       	movw	r22, r14
 800:	80 e3       	ldi	r24, 0x30	; 48
 802:	90 e0       	ldi	r25, 0x00	; 0
 804:	39 d3       	rcall	.+1650   	; 0xe78 <fputc>
 806:	5a 94       	dec	r5
 808:	f8 cf       	rjmp	.-16     	; 0x7fa <vfprintf+0x288>
 80a:	97 fe       	sbrs	r9, 7
 80c:	4a c0       	rjmp	.+148    	; 0x8a2 <vfprintf+0x330>
 80e:	46 01       	movw	r8, r12
 810:	d7 fe       	sbrs	r13, 7
 812:	02 c0       	rjmp	.+4      	; 0x818 <vfprintf+0x2a6>
 814:	81 2c       	mov	r8, r1
 816:	91 2c       	mov	r9, r1
 818:	c6 01       	movw	r24, r12
 81a:	88 19       	sub	r24, r8
 81c:	99 09       	sbc	r25, r9
 81e:	f3 01       	movw	r30, r6
 820:	e8 0f       	add	r30, r24
 822:	f9 1f       	adc	r31, r25
 824:	fe 87       	std	Y+14, r31	; 0x0e
 826:	ed 87       	std	Y+13, r30	; 0x0d
 828:	96 01       	movw	r18, r12
 82a:	24 19       	sub	r18, r4
 82c:	31 09       	sbc	r19, r1
 82e:	38 8b       	std	Y+16, r19	; 0x10
 830:	2f 87       	std	Y+15, r18	; 0x0f
 832:	01 2f       	mov	r16, r17
 834:	10 e0       	ldi	r17, 0x00	; 0
 836:	11 95       	neg	r17
 838:	01 95       	neg	r16
 83a:	11 09       	sbc	r17, r1
 83c:	3f ef       	ldi	r19, 0xFF	; 255
 83e:	83 16       	cp	r8, r19
 840:	93 06       	cpc	r9, r19
 842:	21 f4       	brne	.+8      	; 0x84c <vfprintf+0x2da>
 844:	b7 01       	movw	r22, r14
 846:	8e e2       	ldi	r24, 0x2E	; 46
 848:	90 e0       	ldi	r25, 0x00	; 0
 84a:	16 d3       	rcall	.+1580   	; 0xe78 <fputc>
 84c:	c8 14       	cp	r12, r8
 84e:	d9 04       	cpc	r13, r9
 850:	4c f0       	brlt	.+18     	; 0x864 <vfprintf+0x2f2>
 852:	8f 85       	ldd	r24, Y+15	; 0x0f
 854:	98 89       	ldd	r25, Y+16	; 0x10
 856:	88 15       	cp	r24, r8
 858:	99 05       	cpc	r25, r9
 85a:	24 f4       	brge	.+8      	; 0x864 <vfprintf+0x2f2>
 85c:	ed 85       	ldd	r30, Y+13	; 0x0d
 85e:	fe 85       	ldd	r31, Y+14	; 0x0e
 860:	81 81       	ldd	r24, Z+1	; 0x01
 862:	01 c0       	rjmp	.+2      	; 0x866 <vfprintf+0x2f4>
 864:	80 e3       	ldi	r24, 0x30	; 48
 866:	f1 e0       	ldi	r31, 0x01	; 1
 868:	8f 1a       	sub	r8, r31
 86a:	91 08       	sbc	r9, r1
 86c:	2d 85       	ldd	r18, Y+13	; 0x0d
 86e:	3e 85       	ldd	r19, Y+14	; 0x0e
 870:	2f 5f       	subi	r18, 0xFF	; 255
 872:	3f 4f       	sbci	r19, 0xFF	; 255
 874:	3e 87       	std	Y+14, r19	; 0x0e
 876:	2d 87       	std	Y+13, r18	; 0x0d
 878:	80 16       	cp	r8, r16
 87a:	91 06       	cpc	r9, r17
 87c:	24 f0       	brlt	.+8      	; 0x886 <vfprintf+0x314>
 87e:	b7 01       	movw	r22, r14
 880:	90 e0       	ldi	r25, 0x00	; 0
 882:	fa d2       	rcall	.+1524   	; 0xe78 <fputc>
 884:	db cf       	rjmp	.-74     	; 0x83c <vfprintf+0x2ca>
 886:	c8 14       	cp	r12, r8
 888:	d9 04       	cpc	r13, r9
 88a:	41 f4       	brne	.+16     	; 0x89c <vfprintf+0x32a>
 88c:	9a 81       	ldd	r25, Y+2	; 0x02
 88e:	96 33       	cpi	r25, 0x36	; 54
 890:	20 f4       	brcc	.+8      	; 0x89a <vfprintf+0x328>
 892:	95 33       	cpi	r25, 0x35	; 53
 894:	19 f4       	brne	.+6      	; 0x89c <vfprintf+0x32a>
 896:	3c 85       	ldd	r19, Y+12	; 0x0c
 898:	34 ff       	sbrs	r19, 4
 89a:	81 e3       	ldi	r24, 0x31	; 49
 89c:	b7 01       	movw	r22, r14
 89e:	90 e0       	ldi	r25, 0x00	; 0
 8a0:	48 c0       	rjmp	.+144    	; 0x932 <__stack+0x33>
 8a2:	8a 81       	ldd	r24, Y+2	; 0x02
 8a4:	81 33       	cpi	r24, 0x31	; 49
 8a6:	19 f0       	breq	.+6      	; 0x8ae <vfprintf+0x33c>
 8a8:	9c 85       	ldd	r25, Y+12	; 0x0c
 8aa:	9f 7e       	andi	r25, 0xEF	; 239
 8ac:	9c 87       	std	Y+12, r25	; 0x0c
 8ae:	b7 01       	movw	r22, r14
 8b0:	90 e0       	ldi	r25, 0x00	; 0
 8b2:	e2 d2       	rcall	.+1476   	; 0xe78 <fputc>
 8b4:	11 11       	cpse	r17, r1
 8b6:	05 c0       	rjmp	.+10     	; 0x8c2 <vfprintf+0x350>
 8b8:	94 fc       	sbrc	r9, 4
 8ba:	16 c0       	rjmp	.+44     	; 0x8e8 <vfprintf+0x376>
 8bc:	85 e6       	ldi	r24, 0x65	; 101
 8be:	90 e0       	ldi	r25, 0x00	; 0
 8c0:	15 c0       	rjmp	.+42     	; 0x8ec <vfprintf+0x37a>
 8c2:	b7 01       	movw	r22, r14
 8c4:	8e e2       	ldi	r24, 0x2E	; 46
 8c6:	90 e0       	ldi	r25, 0x00	; 0
 8c8:	d7 d2       	rcall	.+1454   	; 0xe78 <fputc>
 8ca:	1e 5f       	subi	r17, 0xFE	; 254
 8cc:	82 e0       	ldi	r24, 0x02	; 2
 8ce:	01 e0       	ldi	r16, 0x01	; 1
 8d0:	08 0f       	add	r16, r24
 8d2:	f3 01       	movw	r30, r6
 8d4:	e8 0f       	add	r30, r24
 8d6:	f1 1d       	adc	r31, r1
 8d8:	80 81       	ld	r24, Z
 8da:	b7 01       	movw	r22, r14
 8dc:	90 e0       	ldi	r25, 0x00	; 0
 8de:	cc d2       	rcall	.+1432   	; 0xe78 <fputc>
 8e0:	80 2f       	mov	r24, r16
 8e2:	01 13       	cpse	r16, r17
 8e4:	f4 cf       	rjmp	.-24     	; 0x8ce <vfprintf+0x35c>
 8e6:	e8 cf       	rjmp	.-48     	; 0x8b8 <vfprintf+0x346>
 8e8:	85 e4       	ldi	r24, 0x45	; 69
 8ea:	90 e0       	ldi	r25, 0x00	; 0
 8ec:	b7 01       	movw	r22, r14
 8ee:	c4 d2       	rcall	.+1416   	; 0xe78 <fputc>
 8f0:	d7 fc       	sbrc	r13, 7
 8f2:	06 c0       	rjmp	.+12     	; 0x900 <__stack+0x1>
 8f4:	c1 14       	cp	r12, r1
 8f6:	d1 04       	cpc	r13, r1
 8f8:	41 f4       	brne	.+16     	; 0x90a <__stack+0xb>
 8fa:	ec 85       	ldd	r30, Y+12	; 0x0c
 8fc:	e4 ff       	sbrs	r30, 4
 8fe:	05 c0       	rjmp	.+10     	; 0x90a <__stack+0xb>
 900:	d1 94       	neg	r13
 902:	c1 94       	neg	r12
 904:	d1 08       	sbc	r13, r1
 906:	8d e2       	ldi	r24, 0x2D	; 45
 908:	01 c0       	rjmp	.+2      	; 0x90c <__stack+0xd>
 90a:	8b e2       	ldi	r24, 0x2B	; 43
 90c:	b7 01       	movw	r22, r14
 90e:	90 e0       	ldi	r25, 0x00	; 0
 910:	b3 d2       	rcall	.+1382   	; 0xe78 <fputc>
 912:	80 e3       	ldi	r24, 0x30	; 48
 914:	2a e0       	ldi	r18, 0x0A	; 10
 916:	c2 16       	cp	r12, r18
 918:	d1 04       	cpc	r13, r1
 91a:	2c f0       	brlt	.+10     	; 0x926 <__stack+0x27>
 91c:	8f 5f       	subi	r24, 0xFF	; 255
 91e:	fa e0       	ldi	r31, 0x0A	; 10
 920:	cf 1a       	sub	r12, r31
 922:	d1 08       	sbc	r13, r1
 924:	f7 cf       	rjmp	.-18     	; 0x914 <__stack+0x15>
 926:	b7 01       	movw	r22, r14
 928:	90 e0       	ldi	r25, 0x00	; 0
 92a:	a6 d2       	rcall	.+1356   	; 0xe78 <fputc>
 92c:	b7 01       	movw	r22, r14
 92e:	c6 01       	movw	r24, r12
 930:	c0 96       	adiw	r24, 0x30	; 48
 932:	a2 d2       	rcall	.+1348   	; 0xe78 <fputc>
 934:	49 c1       	rjmp	.+658    	; 0xbc8 <__stack+0x2c9>
 936:	83 36       	cpi	r24, 0x63	; 99
 938:	31 f0       	breq	.+12     	; 0x946 <__stack+0x47>
 93a:	83 37       	cpi	r24, 0x73	; 115
 93c:	79 f0       	breq	.+30     	; 0x95c <__stack+0x5d>
 93e:	83 35       	cpi	r24, 0x53	; 83
 940:	09 f0       	breq	.+2      	; 0x944 <__stack+0x45>
 942:	52 c0       	rjmp	.+164    	; 0x9e8 <__stack+0xe9>
 944:	1f c0       	rjmp	.+62     	; 0x984 <__stack+0x85>
 946:	56 01       	movw	r10, r12
 948:	32 e0       	ldi	r19, 0x02	; 2
 94a:	a3 0e       	add	r10, r19
 94c:	b1 1c       	adc	r11, r1
 94e:	f6 01       	movw	r30, r12
 950:	80 81       	ld	r24, Z
 952:	89 83       	std	Y+1, r24	; 0x01
 954:	01 e0       	ldi	r16, 0x01	; 1
 956:	10 e0       	ldi	r17, 0x00	; 0
 958:	63 01       	movw	r12, r6
 95a:	11 c0       	rjmp	.+34     	; 0x97e <__stack+0x7f>
 95c:	56 01       	movw	r10, r12
 95e:	f2 e0       	ldi	r31, 0x02	; 2
 960:	af 0e       	add	r10, r31
 962:	b1 1c       	adc	r11, r1
 964:	f6 01       	movw	r30, r12
 966:	c0 80       	ld	r12, Z
 968:	d1 80       	ldd	r13, Z+1	; 0x01
 96a:	96 fe       	sbrs	r9, 6
 96c:	03 c0       	rjmp	.+6      	; 0x974 <__stack+0x75>
 96e:	61 2f       	mov	r22, r17
 970:	70 e0       	ldi	r23, 0x00	; 0
 972:	02 c0       	rjmp	.+4      	; 0x978 <__stack+0x79>
 974:	6f ef       	ldi	r22, 0xFF	; 255
 976:	7f ef       	ldi	r23, 0xFF	; 255
 978:	c6 01       	movw	r24, r12
 97a:	73 d2       	rcall	.+1254   	; 0xe62 <strnlen>
 97c:	8c 01       	movw	r16, r24
 97e:	f9 2d       	mov	r31, r9
 980:	ff 77       	andi	r31, 0x7F	; 127
 982:	13 c0       	rjmp	.+38     	; 0x9aa <__stack+0xab>
 984:	56 01       	movw	r10, r12
 986:	22 e0       	ldi	r18, 0x02	; 2
 988:	a2 0e       	add	r10, r18
 98a:	b1 1c       	adc	r11, r1
 98c:	f6 01       	movw	r30, r12
 98e:	c0 80       	ld	r12, Z
 990:	d1 80       	ldd	r13, Z+1	; 0x01
 992:	96 fe       	sbrs	r9, 6
 994:	03 c0       	rjmp	.+6      	; 0x99c <__stack+0x9d>
 996:	61 2f       	mov	r22, r17
 998:	70 e0       	ldi	r23, 0x00	; 0
 99a:	02 c0       	rjmp	.+4      	; 0x9a0 <__stack+0xa1>
 99c:	6f ef       	ldi	r22, 0xFF	; 255
 99e:	7f ef       	ldi	r23, 0xFF	; 255
 9a0:	c6 01       	movw	r24, r12
 9a2:	54 d2       	rcall	.+1192   	; 0xe4c <strnlen_P>
 9a4:	8c 01       	movw	r16, r24
 9a6:	f9 2d       	mov	r31, r9
 9a8:	f0 68       	ori	r31, 0x80	; 128
 9aa:	9f 2e       	mov	r9, r31
 9ac:	f3 fd       	sbrc	r31, 3
 9ae:	18 c0       	rjmp	.+48     	; 0x9e0 <__stack+0xe1>
 9b0:	85 2d       	mov	r24, r5
 9b2:	90 e0       	ldi	r25, 0x00	; 0
 9b4:	08 17       	cp	r16, r24
 9b6:	19 07       	cpc	r17, r25
 9b8:	98 f4       	brcc	.+38     	; 0x9e0 <__stack+0xe1>
 9ba:	b7 01       	movw	r22, r14
 9bc:	80 e2       	ldi	r24, 0x20	; 32
 9be:	90 e0       	ldi	r25, 0x00	; 0
 9c0:	5b d2       	rcall	.+1206   	; 0xe78 <fputc>
 9c2:	5a 94       	dec	r5
 9c4:	f5 cf       	rjmp	.-22     	; 0x9b0 <__stack+0xb1>
 9c6:	f6 01       	movw	r30, r12
 9c8:	97 fc       	sbrc	r9, 7
 9ca:	85 91       	lpm	r24, Z+
 9cc:	97 fe       	sbrs	r9, 7
 9ce:	81 91       	ld	r24, Z+
 9d0:	6f 01       	movw	r12, r30
 9d2:	b7 01       	movw	r22, r14
 9d4:	90 e0       	ldi	r25, 0x00	; 0
 9d6:	50 d2       	rcall	.+1184   	; 0xe78 <fputc>
 9d8:	51 10       	cpse	r5, r1
 9da:	5a 94       	dec	r5
 9dc:	01 50       	subi	r16, 0x01	; 1
 9de:	11 09       	sbc	r17, r1
 9e0:	01 15       	cp	r16, r1
 9e2:	11 05       	cpc	r17, r1
 9e4:	81 f7       	brne	.-32     	; 0x9c6 <__stack+0xc7>
 9e6:	f0 c0       	rjmp	.+480    	; 0xbc8 <__stack+0x2c9>
 9e8:	84 36       	cpi	r24, 0x64	; 100
 9ea:	11 f0       	breq	.+4      	; 0x9f0 <__stack+0xf1>
 9ec:	89 36       	cpi	r24, 0x69	; 105
 9ee:	59 f5       	brne	.+86     	; 0xa46 <__stack+0x147>
 9f0:	56 01       	movw	r10, r12
 9f2:	97 fe       	sbrs	r9, 7
 9f4:	09 c0       	rjmp	.+18     	; 0xa08 <__stack+0x109>
 9f6:	24 e0       	ldi	r18, 0x04	; 4
 9f8:	a2 0e       	add	r10, r18
 9fa:	b1 1c       	adc	r11, r1
 9fc:	f6 01       	movw	r30, r12
 9fe:	60 81       	ld	r22, Z
 a00:	71 81       	ldd	r23, Z+1	; 0x01
 a02:	82 81       	ldd	r24, Z+2	; 0x02
 a04:	93 81       	ldd	r25, Z+3	; 0x03
 a06:	0a c0       	rjmp	.+20     	; 0xa1c <__stack+0x11d>
 a08:	f2 e0       	ldi	r31, 0x02	; 2
 a0a:	af 0e       	add	r10, r31
 a0c:	b1 1c       	adc	r11, r1
 a0e:	f6 01       	movw	r30, r12
 a10:	60 81       	ld	r22, Z
 a12:	71 81       	ldd	r23, Z+1	; 0x01
 a14:	07 2e       	mov	r0, r23
 a16:	00 0c       	add	r0, r0
 a18:	88 0b       	sbc	r24, r24
 a1a:	99 0b       	sbc	r25, r25
 a1c:	f9 2d       	mov	r31, r9
 a1e:	ff 76       	andi	r31, 0x6F	; 111
 a20:	9f 2e       	mov	r9, r31
 a22:	97 ff       	sbrs	r25, 7
 a24:	09 c0       	rjmp	.+18     	; 0xa38 <__stack+0x139>
 a26:	90 95       	com	r25
 a28:	80 95       	com	r24
 a2a:	70 95       	com	r23
 a2c:	61 95       	neg	r22
 a2e:	7f 4f       	sbci	r23, 0xFF	; 255
 a30:	8f 4f       	sbci	r24, 0xFF	; 255
 a32:	9f 4f       	sbci	r25, 0xFF	; 255
 a34:	f0 68       	ori	r31, 0x80	; 128
 a36:	9f 2e       	mov	r9, r31
 a38:	2a e0       	ldi	r18, 0x0A	; 10
 a3a:	30 e0       	ldi	r19, 0x00	; 0
 a3c:	a3 01       	movw	r20, r6
 a3e:	77 d2       	rcall	.+1262   	; 0xf2e <__ultoa_invert>
 a40:	c8 2e       	mov	r12, r24
 a42:	c6 18       	sub	r12, r6
 a44:	3e c0       	rjmp	.+124    	; 0xac2 <__stack+0x1c3>
 a46:	09 2d       	mov	r16, r9
 a48:	85 37       	cpi	r24, 0x75	; 117
 a4a:	21 f4       	brne	.+8      	; 0xa54 <__stack+0x155>
 a4c:	0f 7e       	andi	r16, 0xEF	; 239
 a4e:	2a e0       	ldi	r18, 0x0A	; 10
 a50:	30 e0       	ldi	r19, 0x00	; 0
 a52:	1d c0       	rjmp	.+58     	; 0xa8e <__stack+0x18f>
 a54:	09 7f       	andi	r16, 0xF9	; 249
 a56:	8f 36       	cpi	r24, 0x6F	; 111
 a58:	91 f0       	breq	.+36     	; 0xa7e <__stack+0x17f>
 a5a:	18 f4       	brcc	.+6      	; 0xa62 <__stack+0x163>
 a5c:	88 35       	cpi	r24, 0x58	; 88
 a5e:	59 f0       	breq	.+22     	; 0xa76 <__stack+0x177>
 a60:	bc c0       	rjmp	.+376    	; 0xbda <__stack+0x2db>
 a62:	80 37       	cpi	r24, 0x70	; 112
 a64:	19 f0       	breq	.+6      	; 0xa6c <__stack+0x16d>
 a66:	88 37       	cpi	r24, 0x78	; 120
 a68:	11 f0       	breq	.+4      	; 0xa6e <__stack+0x16f>
 a6a:	b7 c0       	rjmp	.+366    	; 0xbda <__stack+0x2db>
 a6c:	00 61       	ori	r16, 0x10	; 16
 a6e:	04 ff       	sbrs	r16, 4
 a70:	09 c0       	rjmp	.+18     	; 0xa84 <__stack+0x185>
 a72:	04 60       	ori	r16, 0x04	; 4
 a74:	07 c0       	rjmp	.+14     	; 0xa84 <__stack+0x185>
 a76:	94 fe       	sbrs	r9, 4
 a78:	08 c0       	rjmp	.+16     	; 0xa8a <__stack+0x18b>
 a7a:	06 60       	ori	r16, 0x06	; 6
 a7c:	06 c0       	rjmp	.+12     	; 0xa8a <__stack+0x18b>
 a7e:	28 e0       	ldi	r18, 0x08	; 8
 a80:	30 e0       	ldi	r19, 0x00	; 0
 a82:	05 c0       	rjmp	.+10     	; 0xa8e <__stack+0x18f>
 a84:	20 e1       	ldi	r18, 0x10	; 16
 a86:	30 e0       	ldi	r19, 0x00	; 0
 a88:	02 c0       	rjmp	.+4      	; 0xa8e <__stack+0x18f>
 a8a:	20 e1       	ldi	r18, 0x10	; 16
 a8c:	32 e0       	ldi	r19, 0x02	; 2
 a8e:	56 01       	movw	r10, r12
 a90:	07 ff       	sbrs	r16, 7
 a92:	09 c0       	rjmp	.+18     	; 0xaa6 <__stack+0x1a7>
 a94:	84 e0       	ldi	r24, 0x04	; 4
 a96:	a8 0e       	add	r10, r24
 a98:	b1 1c       	adc	r11, r1
 a9a:	f6 01       	movw	r30, r12
 a9c:	60 81       	ld	r22, Z
 a9e:	71 81       	ldd	r23, Z+1	; 0x01
 aa0:	82 81       	ldd	r24, Z+2	; 0x02
 aa2:	93 81       	ldd	r25, Z+3	; 0x03
 aa4:	08 c0       	rjmp	.+16     	; 0xab6 <__stack+0x1b7>
 aa6:	f2 e0       	ldi	r31, 0x02	; 2
 aa8:	af 0e       	add	r10, r31
 aaa:	b1 1c       	adc	r11, r1
 aac:	f6 01       	movw	r30, r12
 aae:	60 81       	ld	r22, Z
 ab0:	71 81       	ldd	r23, Z+1	; 0x01
 ab2:	80 e0       	ldi	r24, 0x00	; 0
 ab4:	90 e0       	ldi	r25, 0x00	; 0
 ab6:	a3 01       	movw	r20, r6
 ab8:	3a d2       	rcall	.+1140   	; 0xf2e <__ultoa_invert>
 aba:	c8 2e       	mov	r12, r24
 abc:	c6 18       	sub	r12, r6
 abe:	0f 77       	andi	r16, 0x7F	; 127
 ac0:	90 2e       	mov	r9, r16
 ac2:	96 fe       	sbrs	r9, 6
 ac4:	0b c0       	rjmp	.+22     	; 0xadc <__stack+0x1dd>
 ac6:	09 2d       	mov	r16, r9
 ac8:	0e 7f       	andi	r16, 0xFE	; 254
 aca:	c1 16       	cp	r12, r17
 acc:	50 f4       	brcc	.+20     	; 0xae2 <__stack+0x1e3>
 ace:	94 fe       	sbrs	r9, 4
 ad0:	0a c0       	rjmp	.+20     	; 0xae6 <__stack+0x1e7>
 ad2:	92 fc       	sbrc	r9, 2
 ad4:	08 c0       	rjmp	.+16     	; 0xae6 <__stack+0x1e7>
 ad6:	09 2d       	mov	r16, r9
 ad8:	0e 7e       	andi	r16, 0xEE	; 238
 ada:	05 c0       	rjmp	.+10     	; 0xae6 <__stack+0x1e7>
 adc:	dc 2c       	mov	r13, r12
 ade:	09 2d       	mov	r16, r9
 ae0:	03 c0       	rjmp	.+6      	; 0xae8 <__stack+0x1e9>
 ae2:	dc 2c       	mov	r13, r12
 ae4:	01 c0       	rjmp	.+2      	; 0xae8 <__stack+0x1e9>
 ae6:	d1 2e       	mov	r13, r17
 ae8:	04 ff       	sbrs	r16, 4
 aea:	0d c0       	rjmp	.+26     	; 0xb06 <__stack+0x207>
 aec:	fe 01       	movw	r30, r28
 aee:	ec 0d       	add	r30, r12
 af0:	f1 1d       	adc	r31, r1
 af2:	80 81       	ld	r24, Z
 af4:	80 33       	cpi	r24, 0x30	; 48
 af6:	11 f4       	brne	.+4      	; 0xafc <__stack+0x1fd>
 af8:	09 7e       	andi	r16, 0xE9	; 233
 afa:	09 c0       	rjmp	.+18     	; 0xb0e <__stack+0x20f>
 afc:	02 ff       	sbrs	r16, 2
 afe:	06 c0       	rjmp	.+12     	; 0xb0c <__stack+0x20d>
 b00:	d3 94       	inc	r13
 b02:	d3 94       	inc	r13
 b04:	04 c0       	rjmp	.+8      	; 0xb0e <__stack+0x20f>
 b06:	80 2f       	mov	r24, r16
 b08:	86 78       	andi	r24, 0x86	; 134
 b0a:	09 f0       	breq	.+2      	; 0xb0e <__stack+0x20f>
 b0c:	d3 94       	inc	r13
 b0e:	03 fd       	sbrc	r16, 3
 b10:	10 c0       	rjmp	.+32     	; 0xb32 <__stack+0x233>
 b12:	00 ff       	sbrs	r16, 0
 b14:	06 c0       	rjmp	.+12     	; 0xb22 <__stack+0x223>
 b16:	1c 2d       	mov	r17, r12
 b18:	d5 14       	cp	r13, r5
 b1a:	78 f4       	brcc	.+30     	; 0xb3a <__stack+0x23b>
 b1c:	15 0d       	add	r17, r5
 b1e:	1d 19       	sub	r17, r13
 b20:	0c c0       	rjmp	.+24     	; 0xb3a <__stack+0x23b>
 b22:	d5 14       	cp	r13, r5
 b24:	50 f4       	brcc	.+20     	; 0xb3a <__stack+0x23b>
 b26:	b7 01       	movw	r22, r14
 b28:	80 e2       	ldi	r24, 0x20	; 32
 b2a:	90 e0       	ldi	r25, 0x00	; 0
 b2c:	a5 d1       	rcall	.+842    	; 0xe78 <fputc>
 b2e:	d3 94       	inc	r13
 b30:	f8 cf       	rjmp	.-16     	; 0xb22 <__stack+0x223>
 b32:	d5 14       	cp	r13, r5
 b34:	10 f4       	brcc	.+4      	; 0xb3a <__stack+0x23b>
 b36:	5d 18       	sub	r5, r13
 b38:	01 c0       	rjmp	.+2      	; 0xb3c <__stack+0x23d>
 b3a:	51 2c       	mov	r5, r1
 b3c:	04 ff       	sbrs	r16, 4
 b3e:	0f c0       	rjmp	.+30     	; 0xb5e <__stack+0x25f>
 b40:	b7 01       	movw	r22, r14
 b42:	80 e3       	ldi	r24, 0x30	; 48
 b44:	90 e0       	ldi	r25, 0x00	; 0
 b46:	98 d1       	rcall	.+816    	; 0xe78 <fputc>
 b48:	02 ff       	sbrs	r16, 2
 b4a:	16 c0       	rjmp	.+44     	; 0xb78 <__stack+0x279>
 b4c:	01 fd       	sbrc	r16, 1
 b4e:	03 c0       	rjmp	.+6      	; 0xb56 <__stack+0x257>
 b50:	88 e7       	ldi	r24, 0x78	; 120
 b52:	90 e0       	ldi	r25, 0x00	; 0
 b54:	02 c0       	rjmp	.+4      	; 0xb5a <__stack+0x25b>
 b56:	88 e5       	ldi	r24, 0x58	; 88
 b58:	90 e0       	ldi	r25, 0x00	; 0
 b5a:	b7 01       	movw	r22, r14
 b5c:	0c c0       	rjmp	.+24     	; 0xb76 <__stack+0x277>
 b5e:	80 2f       	mov	r24, r16
 b60:	86 78       	andi	r24, 0x86	; 134
 b62:	51 f0       	breq	.+20     	; 0xb78 <__stack+0x279>
 b64:	01 ff       	sbrs	r16, 1
 b66:	02 c0       	rjmp	.+4      	; 0xb6c <__stack+0x26d>
 b68:	8b e2       	ldi	r24, 0x2B	; 43
 b6a:	01 c0       	rjmp	.+2      	; 0xb6e <__stack+0x26f>
 b6c:	80 e2       	ldi	r24, 0x20	; 32
 b6e:	07 fd       	sbrc	r16, 7
 b70:	8d e2       	ldi	r24, 0x2D	; 45
 b72:	b7 01       	movw	r22, r14
 b74:	90 e0       	ldi	r25, 0x00	; 0
 b76:	80 d1       	rcall	.+768    	; 0xe78 <fputc>
 b78:	c1 16       	cp	r12, r17
 b7a:	30 f4       	brcc	.+12     	; 0xb88 <__stack+0x289>
 b7c:	b7 01       	movw	r22, r14
 b7e:	80 e3       	ldi	r24, 0x30	; 48
 b80:	90 e0       	ldi	r25, 0x00	; 0
 b82:	7a d1       	rcall	.+756    	; 0xe78 <fputc>
 b84:	11 50       	subi	r17, 0x01	; 1
 b86:	f8 cf       	rjmp	.-16     	; 0xb78 <__stack+0x279>
 b88:	ca 94       	dec	r12
 b8a:	f3 01       	movw	r30, r6
 b8c:	ec 0d       	add	r30, r12
 b8e:	f1 1d       	adc	r31, r1
 b90:	80 81       	ld	r24, Z
 b92:	b7 01       	movw	r22, r14
 b94:	90 e0       	ldi	r25, 0x00	; 0
 b96:	70 d1       	rcall	.+736    	; 0xe78 <fputc>
 b98:	c1 10       	cpse	r12, r1
 b9a:	f6 cf       	rjmp	.-20     	; 0xb88 <__stack+0x289>
 b9c:	15 c0       	rjmp	.+42     	; 0xbc8 <__stack+0x2c9>
 b9e:	f4 e0       	ldi	r31, 0x04	; 4
 ba0:	f5 15       	cp	r31, r5
 ba2:	50 f5       	brcc	.+84     	; 0xbf8 <__stack+0x2f9>
 ba4:	84 e0       	ldi	r24, 0x04	; 4
 ba6:	58 1a       	sub	r5, r24
 ba8:	93 fe       	sbrs	r9, 3
 baa:	1e c0       	rjmp	.+60     	; 0xbe8 <__stack+0x2e9>
 bac:	01 11       	cpse	r16, r1
 bae:	25 c0       	rjmp	.+74     	; 0xbfa <__stack+0x2fb>
 bb0:	2c 85       	ldd	r18, Y+12	; 0x0c
 bb2:	23 ff       	sbrs	r18, 3
 bb4:	27 c0       	rjmp	.+78     	; 0xc04 <__stack+0x305>
 bb6:	08 e6       	ldi	r16, 0x68	; 104
 bb8:	10 e0       	ldi	r17, 0x00	; 0
 bba:	39 2d       	mov	r19, r9
 bbc:	30 71       	andi	r19, 0x10	; 16
 bbe:	93 2e       	mov	r9, r19
 bc0:	f8 01       	movw	r30, r16
 bc2:	84 91       	lpm	r24, Z
 bc4:	81 11       	cpse	r24, r1
 bc6:	21 c0       	rjmp	.+66     	; 0xc0a <__stack+0x30b>
 bc8:	55 20       	and	r5, r5
 bca:	09 f4       	brne	.+2      	; 0xbce <__stack+0x2cf>
 bcc:	fc cc       	rjmp	.-1544   	; 0x5c6 <vfprintf+0x54>
 bce:	b7 01       	movw	r22, r14
 bd0:	80 e2       	ldi	r24, 0x20	; 32
 bd2:	90 e0       	ldi	r25, 0x00	; 0
 bd4:	51 d1       	rcall	.+674    	; 0xe78 <fputc>
 bd6:	5a 94       	dec	r5
 bd8:	f7 cf       	rjmp	.-18     	; 0xbc8 <__stack+0x2c9>
 bda:	f7 01       	movw	r30, r14
 bdc:	86 81       	ldd	r24, Z+6	; 0x06
 bde:	97 81       	ldd	r25, Z+7	; 0x07
 be0:	23 c0       	rjmp	.+70     	; 0xc28 <__stack+0x329>
 be2:	8f ef       	ldi	r24, 0xFF	; 255
 be4:	9f ef       	ldi	r25, 0xFF	; 255
 be6:	20 c0       	rjmp	.+64     	; 0xc28 <__stack+0x329>
 be8:	b7 01       	movw	r22, r14
 bea:	80 e2       	ldi	r24, 0x20	; 32
 bec:	90 e0       	ldi	r25, 0x00	; 0
 bee:	44 d1       	rcall	.+648    	; 0xe78 <fputc>
 bf0:	5a 94       	dec	r5
 bf2:	51 10       	cpse	r5, r1
 bf4:	f9 cf       	rjmp	.-14     	; 0xbe8 <__stack+0x2e9>
 bf6:	da cf       	rjmp	.-76     	; 0xbac <__stack+0x2ad>
 bf8:	51 2c       	mov	r5, r1
 bfa:	b7 01       	movw	r22, r14
 bfc:	80 2f       	mov	r24, r16
 bfe:	90 e0       	ldi	r25, 0x00	; 0
 c00:	3b d1       	rcall	.+630    	; 0xe78 <fputc>
 c02:	d6 cf       	rjmp	.-84     	; 0xbb0 <__stack+0x2b1>
 c04:	0c e6       	ldi	r16, 0x6C	; 108
 c06:	10 e0       	ldi	r17, 0x00	; 0
 c08:	d8 cf       	rjmp	.-80     	; 0xbba <__stack+0x2bb>
 c0a:	91 10       	cpse	r9, r1
 c0c:	80 52       	subi	r24, 0x20	; 32
 c0e:	b7 01       	movw	r22, r14
 c10:	90 e0       	ldi	r25, 0x00	; 0
 c12:	32 d1       	rcall	.+612    	; 0xe78 <fputc>
 c14:	0f 5f       	subi	r16, 0xFF	; 255
 c16:	1f 4f       	sbci	r17, 0xFF	; 255
 c18:	d3 cf       	rjmp	.-90     	; 0xbc0 <__stack+0x2c1>
 c1a:	23 e0       	ldi	r18, 0x03	; 3
 c1c:	25 15       	cp	r18, r5
 c1e:	10 f4       	brcc	.+4      	; 0xc24 <__stack+0x325>
 c20:	83 e0       	ldi	r24, 0x03	; 3
 c22:	c1 cf       	rjmp	.-126    	; 0xba6 <__stack+0x2a7>
 c24:	51 2c       	mov	r5, r1
 c26:	c4 cf       	rjmp	.-120    	; 0xbb0 <__stack+0x2b1>
 c28:	60 96       	adiw	r28, 0x10	; 16
 c2a:	e2 e1       	ldi	r30, 0x12	; 18
 c2c:	1c c0       	rjmp	.+56     	; 0xc66 <__epilogue_restores__>

00000c2e <__prologue_saves__>:
 c2e:	2f 92       	push	r2
 c30:	3f 92       	push	r3
 c32:	4f 92       	push	r4
 c34:	5f 92       	push	r5
 c36:	6f 92       	push	r6
 c38:	7f 92       	push	r7
 c3a:	8f 92       	push	r8
 c3c:	9f 92       	push	r9
 c3e:	af 92       	push	r10
 c40:	bf 92       	push	r11
 c42:	cf 92       	push	r12
 c44:	df 92       	push	r13
 c46:	ef 92       	push	r14
 c48:	ff 92       	push	r15
 c4a:	0f 93       	push	r16
 c4c:	1f 93       	push	r17
 c4e:	cf 93       	push	r28
 c50:	df 93       	push	r29
 c52:	cd b7       	in	r28, 0x3d	; 61
 c54:	de b7       	in	r29, 0x3e	; 62
 c56:	ca 1b       	sub	r28, r26
 c58:	db 0b       	sbc	r29, r27
 c5a:	0f b6       	in	r0, 0x3f	; 63
 c5c:	f8 94       	cli
 c5e:	de bf       	out	0x3e, r29	; 62
 c60:	0f be       	out	0x3f, r0	; 63
 c62:	cd bf       	out	0x3d, r28	; 61
 c64:	09 94       	ijmp

00000c66 <__epilogue_restores__>:
 c66:	2a 88       	ldd	r2, Y+18	; 0x12
 c68:	39 88       	ldd	r3, Y+17	; 0x11
 c6a:	48 88       	ldd	r4, Y+16	; 0x10
 c6c:	5f 84       	ldd	r5, Y+15	; 0x0f
 c6e:	6e 84       	ldd	r6, Y+14	; 0x0e
 c70:	7d 84       	ldd	r7, Y+13	; 0x0d
 c72:	8c 84       	ldd	r8, Y+12	; 0x0c
 c74:	9b 84       	ldd	r9, Y+11	; 0x0b
 c76:	aa 84       	ldd	r10, Y+10	; 0x0a
 c78:	b9 84       	ldd	r11, Y+9	; 0x09
 c7a:	c8 84       	ldd	r12, Y+8	; 0x08
 c7c:	df 80       	ldd	r13, Y+7	; 0x07
 c7e:	ee 80       	ldd	r14, Y+6	; 0x06
 c80:	fd 80       	ldd	r15, Y+5	; 0x05
 c82:	0c 81       	ldd	r16, Y+4	; 0x04
 c84:	1b 81       	ldd	r17, Y+3	; 0x03
 c86:	aa 81       	ldd	r26, Y+2	; 0x02
 c88:	b9 81       	ldd	r27, Y+1	; 0x01
 c8a:	ce 0f       	add	r28, r30
 c8c:	d1 1d       	adc	r29, r1
 c8e:	0f b6       	in	r0, 0x3f	; 63
 c90:	f8 94       	cli
 c92:	de bf       	out	0x3e, r29	; 62
 c94:	0f be       	out	0x3f, r0	; 63
 c96:	cd bf       	out	0x3d, r28	; 61
 c98:	ed 01       	movw	r28, r26
 c9a:	08 95       	ret

00000c9c <__ftoa_engine>:
 c9c:	28 30       	cpi	r18, 0x08	; 8
 c9e:	08 f0       	brcs	.+2      	; 0xca2 <__ftoa_engine+0x6>
 ca0:	27 e0       	ldi	r18, 0x07	; 7
 ca2:	33 27       	eor	r19, r19
 ca4:	da 01       	movw	r26, r20
 ca6:	99 0f       	add	r25, r25
 ca8:	31 1d       	adc	r19, r1
 caa:	87 fd       	sbrc	r24, 7
 cac:	91 60       	ori	r25, 0x01	; 1
 cae:	00 96       	adiw	r24, 0x00	; 0
 cb0:	61 05       	cpc	r22, r1
 cb2:	71 05       	cpc	r23, r1
 cb4:	39 f4       	brne	.+14     	; 0xcc4 <__ftoa_engine+0x28>
 cb6:	32 60       	ori	r19, 0x02	; 2
 cb8:	2e 5f       	subi	r18, 0xFE	; 254
 cba:	3d 93       	st	X+, r19
 cbc:	30 e3       	ldi	r19, 0x30	; 48
 cbe:	2a 95       	dec	r18
 cc0:	e1 f7       	brne	.-8      	; 0xcba <__ftoa_engine+0x1e>
 cc2:	08 95       	ret
 cc4:	9f 3f       	cpi	r25, 0xFF	; 255
 cc6:	30 f0       	brcs	.+12     	; 0xcd4 <__ftoa_engine+0x38>
 cc8:	80 38       	cpi	r24, 0x80	; 128
 cca:	71 05       	cpc	r23, r1
 ccc:	61 05       	cpc	r22, r1
 cce:	09 f0       	breq	.+2      	; 0xcd2 <__ftoa_engine+0x36>
 cd0:	3c 5f       	subi	r19, 0xFC	; 252
 cd2:	3c 5f       	subi	r19, 0xFC	; 252
 cd4:	3d 93       	st	X+, r19
 cd6:	91 30       	cpi	r25, 0x01	; 1
 cd8:	08 f0       	brcs	.+2      	; 0xcdc <__ftoa_engine+0x40>
 cda:	80 68       	ori	r24, 0x80	; 128
 cdc:	91 1d       	adc	r25, r1
 cde:	df 93       	push	r29
 ce0:	cf 93       	push	r28
 ce2:	1f 93       	push	r17
 ce4:	0f 93       	push	r16
 ce6:	ff 92       	push	r15
 ce8:	ef 92       	push	r14
 cea:	19 2f       	mov	r17, r25
 cec:	98 7f       	andi	r25, 0xF8	; 248
 cee:	96 95       	lsr	r25
 cf0:	e9 2f       	mov	r30, r25
 cf2:	96 95       	lsr	r25
 cf4:	96 95       	lsr	r25
 cf6:	e9 0f       	add	r30, r25
 cf8:	ff 27       	eor	r31, r31
 cfa:	e6 53       	subi	r30, 0x36	; 54
 cfc:	ff 4f       	sbci	r31, 0xFF	; 255
 cfe:	99 27       	eor	r25, r25
 d00:	33 27       	eor	r19, r19
 d02:	ee 24       	eor	r14, r14
 d04:	ff 24       	eor	r15, r15
 d06:	a7 01       	movw	r20, r14
 d08:	e7 01       	movw	r28, r14
 d0a:	05 90       	lpm	r0, Z+
 d0c:	08 94       	sec
 d0e:	07 94       	ror	r0
 d10:	28 f4       	brcc	.+10     	; 0xd1c <__ftoa_engine+0x80>
 d12:	36 0f       	add	r19, r22
 d14:	e7 1e       	adc	r14, r23
 d16:	f8 1e       	adc	r15, r24
 d18:	49 1f       	adc	r20, r25
 d1a:	51 1d       	adc	r21, r1
 d1c:	66 0f       	add	r22, r22
 d1e:	77 1f       	adc	r23, r23
 d20:	88 1f       	adc	r24, r24
 d22:	99 1f       	adc	r25, r25
 d24:	06 94       	lsr	r0
 d26:	a1 f7       	brne	.-24     	; 0xd10 <__ftoa_engine+0x74>
 d28:	05 90       	lpm	r0, Z+
 d2a:	07 94       	ror	r0
 d2c:	28 f4       	brcc	.+10     	; 0xd38 <__ftoa_engine+0x9c>
 d2e:	e7 0e       	add	r14, r23
 d30:	f8 1e       	adc	r15, r24
 d32:	49 1f       	adc	r20, r25
 d34:	56 1f       	adc	r21, r22
 d36:	c1 1d       	adc	r28, r1
 d38:	77 0f       	add	r23, r23
 d3a:	88 1f       	adc	r24, r24
 d3c:	99 1f       	adc	r25, r25
 d3e:	66 1f       	adc	r22, r22
 d40:	06 94       	lsr	r0
 d42:	a1 f7       	brne	.-24     	; 0xd2c <__ftoa_engine+0x90>
 d44:	05 90       	lpm	r0, Z+
 d46:	07 94       	ror	r0
 d48:	28 f4       	brcc	.+10     	; 0xd54 <__ftoa_engine+0xb8>
 d4a:	f8 0e       	add	r15, r24
 d4c:	49 1f       	adc	r20, r25
 d4e:	56 1f       	adc	r21, r22
 d50:	c7 1f       	adc	r28, r23
 d52:	d1 1d       	adc	r29, r1
 d54:	88 0f       	add	r24, r24
 d56:	99 1f       	adc	r25, r25
 d58:	66 1f       	adc	r22, r22
 d5a:	77 1f       	adc	r23, r23
 d5c:	06 94       	lsr	r0
 d5e:	a1 f7       	brne	.-24     	; 0xd48 <__ftoa_engine+0xac>
 d60:	05 90       	lpm	r0, Z+
 d62:	07 94       	ror	r0
 d64:	20 f4       	brcc	.+8      	; 0xd6e <__ftoa_engine+0xd2>
 d66:	49 0f       	add	r20, r25
 d68:	56 1f       	adc	r21, r22
 d6a:	c7 1f       	adc	r28, r23
 d6c:	d8 1f       	adc	r29, r24
 d6e:	99 0f       	add	r25, r25
 d70:	66 1f       	adc	r22, r22
 d72:	77 1f       	adc	r23, r23
 d74:	88 1f       	adc	r24, r24
 d76:	06 94       	lsr	r0
 d78:	a9 f7       	brne	.-22     	; 0xd64 <__ftoa_engine+0xc8>
 d7a:	84 91       	lpm	r24, Z
 d7c:	10 95       	com	r17
 d7e:	17 70       	andi	r17, 0x07	; 7
 d80:	41 f0       	breq	.+16     	; 0xd92 <__ftoa_engine+0xf6>
 d82:	d6 95       	lsr	r29
 d84:	c7 95       	ror	r28
 d86:	57 95       	ror	r21
 d88:	47 95       	ror	r20
 d8a:	f7 94       	ror	r15
 d8c:	e7 94       	ror	r14
 d8e:	1a 95       	dec	r17
 d90:	c1 f7       	brne	.-16     	; 0xd82 <__ftoa_engine+0xe6>
 d92:	e0 e7       	ldi	r30, 0x70	; 112
 d94:	f0 e0       	ldi	r31, 0x00	; 0
 d96:	68 94       	set
 d98:	15 90       	lpm	r1, Z+
 d9a:	15 91       	lpm	r17, Z+
 d9c:	35 91       	lpm	r19, Z+
 d9e:	65 91       	lpm	r22, Z+
 da0:	95 91       	lpm	r25, Z+
 da2:	05 90       	lpm	r0, Z+
 da4:	7f e2       	ldi	r23, 0x2F	; 47
 da6:	73 95       	inc	r23
 da8:	e1 18       	sub	r14, r1
 daa:	f1 0a       	sbc	r15, r17
 dac:	43 0b       	sbc	r20, r19
 dae:	56 0b       	sbc	r21, r22
 db0:	c9 0b       	sbc	r28, r25
 db2:	d0 09       	sbc	r29, r0
 db4:	c0 f7       	brcc	.-16     	; 0xda6 <__ftoa_engine+0x10a>
 db6:	e1 0c       	add	r14, r1
 db8:	f1 1e       	adc	r15, r17
 dba:	43 1f       	adc	r20, r19
 dbc:	56 1f       	adc	r21, r22
 dbe:	c9 1f       	adc	r28, r25
 dc0:	d0 1d       	adc	r29, r0
 dc2:	7e f4       	brtc	.+30     	; 0xde2 <__ftoa_engine+0x146>
 dc4:	70 33       	cpi	r23, 0x30	; 48
 dc6:	11 f4       	brne	.+4      	; 0xdcc <__ftoa_engine+0x130>
 dc8:	8a 95       	dec	r24
 dca:	e6 cf       	rjmp	.-52     	; 0xd98 <__ftoa_engine+0xfc>
 dcc:	e8 94       	clt
 dce:	01 50       	subi	r16, 0x01	; 1
 dd0:	30 f0       	brcs	.+12     	; 0xdde <__ftoa_engine+0x142>
 dd2:	08 0f       	add	r16, r24
 dd4:	0a f4       	brpl	.+2      	; 0xdd8 <__ftoa_engine+0x13c>
 dd6:	00 27       	eor	r16, r16
 dd8:	02 17       	cp	r16, r18
 dda:	08 f4       	brcc	.+2      	; 0xdde <__ftoa_engine+0x142>
 ddc:	20 2f       	mov	r18, r16
 dde:	23 95       	inc	r18
 de0:	02 2f       	mov	r16, r18
 de2:	7a 33       	cpi	r23, 0x3A	; 58
 de4:	28 f0       	brcs	.+10     	; 0xdf0 <__ftoa_engine+0x154>
 de6:	79 e3       	ldi	r23, 0x39	; 57
 de8:	7d 93       	st	X+, r23
 dea:	2a 95       	dec	r18
 dec:	e9 f7       	brne	.-6      	; 0xde8 <__ftoa_engine+0x14c>
 dee:	10 c0       	rjmp	.+32     	; 0xe10 <__ftoa_engine+0x174>
 df0:	7d 93       	st	X+, r23
 df2:	2a 95       	dec	r18
 df4:	89 f6       	brne	.-94     	; 0xd98 <__ftoa_engine+0xfc>
 df6:	06 94       	lsr	r0
 df8:	97 95       	ror	r25
 dfa:	67 95       	ror	r22
 dfc:	37 95       	ror	r19
 dfe:	17 95       	ror	r17
 e00:	17 94       	ror	r1
 e02:	e1 18       	sub	r14, r1
 e04:	f1 0a       	sbc	r15, r17
 e06:	43 0b       	sbc	r20, r19
 e08:	56 0b       	sbc	r21, r22
 e0a:	c9 0b       	sbc	r28, r25
 e0c:	d0 09       	sbc	r29, r0
 e0e:	98 f0       	brcs	.+38     	; 0xe36 <__ftoa_engine+0x19a>
 e10:	23 95       	inc	r18
 e12:	7e 91       	ld	r23, -X
 e14:	73 95       	inc	r23
 e16:	7a 33       	cpi	r23, 0x3A	; 58
 e18:	08 f0       	brcs	.+2      	; 0xe1c <__ftoa_engine+0x180>
 e1a:	70 e3       	ldi	r23, 0x30	; 48
 e1c:	7c 93       	st	X, r23
 e1e:	20 13       	cpse	r18, r16
 e20:	b8 f7       	brcc	.-18     	; 0xe10 <__ftoa_engine+0x174>
 e22:	7e 91       	ld	r23, -X
 e24:	70 61       	ori	r23, 0x10	; 16
 e26:	7d 93       	st	X+, r23
 e28:	30 f0       	brcs	.+12     	; 0xe36 <__ftoa_engine+0x19a>
 e2a:	83 95       	inc	r24
 e2c:	71 e3       	ldi	r23, 0x31	; 49
 e2e:	7d 93       	st	X+, r23
 e30:	70 e3       	ldi	r23, 0x30	; 48
 e32:	2a 95       	dec	r18
 e34:	e1 f7       	brne	.-8      	; 0xe2e <__ftoa_engine+0x192>
 e36:	11 24       	eor	r1, r1
 e38:	ef 90       	pop	r14
 e3a:	ff 90       	pop	r15
 e3c:	0f 91       	pop	r16
 e3e:	1f 91       	pop	r17
 e40:	cf 91       	pop	r28
 e42:	df 91       	pop	r29
 e44:	99 27       	eor	r25, r25
 e46:	87 fd       	sbrc	r24, 7
 e48:	90 95       	com	r25
 e4a:	08 95       	ret

00000e4c <strnlen_P>:
 e4c:	fc 01       	movw	r30, r24
 e4e:	05 90       	lpm	r0, Z+
 e50:	61 50       	subi	r22, 0x01	; 1
 e52:	70 40       	sbci	r23, 0x00	; 0
 e54:	01 10       	cpse	r0, r1
 e56:	d8 f7       	brcc	.-10     	; 0xe4e <strnlen_P+0x2>
 e58:	80 95       	com	r24
 e5a:	90 95       	com	r25
 e5c:	8e 0f       	add	r24, r30
 e5e:	9f 1f       	adc	r25, r31
 e60:	08 95       	ret

00000e62 <strnlen>:
 e62:	fc 01       	movw	r30, r24
 e64:	61 50       	subi	r22, 0x01	; 1
 e66:	70 40       	sbci	r23, 0x00	; 0
 e68:	01 90       	ld	r0, Z+
 e6a:	01 10       	cpse	r0, r1
 e6c:	d8 f7       	brcc	.-10     	; 0xe64 <strnlen+0x2>
 e6e:	80 95       	com	r24
 e70:	90 95       	com	r25
 e72:	8e 0f       	add	r24, r30
 e74:	9f 1f       	adc	r25, r31
 e76:	08 95       	ret

00000e78 <fputc>:
 e78:	0f 93       	push	r16
 e7a:	1f 93       	push	r17
 e7c:	cf 93       	push	r28
 e7e:	df 93       	push	r29
 e80:	fb 01       	movw	r30, r22
 e82:	23 81       	ldd	r18, Z+3	; 0x03
 e84:	21 fd       	sbrc	r18, 1
 e86:	03 c0       	rjmp	.+6      	; 0xe8e <fputc+0x16>
 e88:	8f ef       	ldi	r24, 0xFF	; 255
 e8a:	9f ef       	ldi	r25, 0xFF	; 255
 e8c:	2c c0       	rjmp	.+88     	; 0xee6 <fputc+0x6e>
 e8e:	22 ff       	sbrs	r18, 2
 e90:	16 c0       	rjmp	.+44     	; 0xebe <fputc+0x46>
 e92:	46 81       	ldd	r20, Z+6	; 0x06
 e94:	57 81       	ldd	r21, Z+7	; 0x07
 e96:	24 81       	ldd	r18, Z+4	; 0x04
 e98:	35 81       	ldd	r19, Z+5	; 0x05
 e9a:	42 17       	cp	r20, r18
 e9c:	53 07       	cpc	r21, r19
 e9e:	44 f4       	brge	.+16     	; 0xeb0 <fputc+0x38>
 ea0:	a0 81       	ld	r26, Z
 ea2:	b1 81       	ldd	r27, Z+1	; 0x01
 ea4:	9d 01       	movw	r18, r26
 ea6:	2f 5f       	subi	r18, 0xFF	; 255
 ea8:	3f 4f       	sbci	r19, 0xFF	; 255
 eaa:	31 83       	std	Z+1, r19	; 0x01
 eac:	20 83       	st	Z, r18
 eae:	8c 93       	st	X, r24
 eb0:	26 81       	ldd	r18, Z+6	; 0x06
 eb2:	37 81       	ldd	r19, Z+7	; 0x07
 eb4:	2f 5f       	subi	r18, 0xFF	; 255
 eb6:	3f 4f       	sbci	r19, 0xFF	; 255
 eb8:	37 83       	std	Z+7, r19	; 0x07
 eba:	26 83       	std	Z+6, r18	; 0x06
 ebc:	14 c0       	rjmp	.+40     	; 0xee6 <fputc+0x6e>
 ebe:	8b 01       	movw	r16, r22
 ec0:	ec 01       	movw	r28, r24
 ec2:	fb 01       	movw	r30, r22
 ec4:	00 84       	ldd	r0, Z+8	; 0x08
 ec6:	f1 85       	ldd	r31, Z+9	; 0x09
 ec8:	e0 2d       	mov	r30, r0
 eca:	09 95       	icall
 ecc:	89 2b       	or	r24, r25
 ece:	e1 f6       	brne	.-72     	; 0xe88 <fputc+0x10>
 ed0:	d8 01       	movw	r26, r16
 ed2:	16 96       	adiw	r26, 0x06	; 6
 ed4:	8d 91       	ld	r24, X+
 ed6:	9c 91       	ld	r25, X
 ed8:	17 97       	sbiw	r26, 0x07	; 7
 eda:	01 96       	adiw	r24, 0x01	; 1
 edc:	17 96       	adiw	r26, 0x07	; 7
 ede:	9c 93       	st	X, r25
 ee0:	8e 93       	st	-X, r24
 ee2:	16 97       	sbiw	r26, 0x06	; 6
 ee4:	ce 01       	movw	r24, r28
 ee6:	df 91       	pop	r29
 ee8:	cf 91       	pop	r28
 eea:	1f 91       	pop	r17
 eec:	0f 91       	pop	r16
 eee:	08 95       	ret

00000ef0 <sprintf>:
 ef0:	ae e0       	ldi	r26, 0x0E	; 14
 ef2:	b0 e0       	ldi	r27, 0x00	; 0
 ef4:	ed e7       	ldi	r30, 0x7D	; 125
 ef6:	f7 e0       	ldi	r31, 0x07	; 7
 ef8:	a8 ce       	rjmp	.-688    	; 0xc4a <__prologue_saves__+0x1c>
 efa:	0d 89       	ldd	r16, Y+21	; 0x15
 efc:	1e 89       	ldd	r17, Y+22	; 0x16
 efe:	86 e0       	ldi	r24, 0x06	; 6
 f00:	8c 83       	std	Y+4, r24	; 0x04
 f02:	1a 83       	std	Y+2, r17	; 0x02
 f04:	09 83       	std	Y+1, r16	; 0x01
 f06:	8f ef       	ldi	r24, 0xFF	; 255
 f08:	9f e7       	ldi	r25, 0x7F	; 127
 f0a:	9e 83       	std	Y+6, r25	; 0x06
 f0c:	8d 83       	std	Y+5, r24	; 0x05
 f0e:	ae 01       	movw	r20, r28
 f10:	47 5e       	subi	r20, 0xE7	; 231
 f12:	5f 4f       	sbci	r21, 0xFF	; 255
 f14:	6f 89       	ldd	r22, Y+23	; 0x17
 f16:	78 8d       	ldd	r23, Y+24	; 0x18
 f18:	ce 01       	movw	r24, r28
 f1a:	01 96       	adiw	r24, 0x01	; 1
 f1c:	2a db       	rcall	.-2476   	; 0x572 <vfprintf>
 f1e:	ef 81       	ldd	r30, Y+7	; 0x07
 f20:	f8 85       	ldd	r31, Y+8	; 0x08
 f22:	e0 0f       	add	r30, r16
 f24:	f1 1f       	adc	r31, r17
 f26:	10 82       	st	Z, r1
 f28:	2e 96       	adiw	r28, 0x0e	; 14
 f2a:	e4 e0       	ldi	r30, 0x04	; 4
 f2c:	aa ce       	rjmp	.-684    	; 0xc82 <__epilogue_restores__+0x1c>

00000f2e <__ultoa_invert>:
 f2e:	fa 01       	movw	r30, r20
 f30:	aa 27       	eor	r26, r26
 f32:	28 30       	cpi	r18, 0x08	; 8
 f34:	51 f1       	breq	.+84     	; 0xf8a <__ultoa_invert+0x5c>
 f36:	20 31       	cpi	r18, 0x10	; 16
 f38:	81 f1       	breq	.+96     	; 0xf9a <__ultoa_invert+0x6c>
 f3a:	e8 94       	clt
 f3c:	6f 93       	push	r22
 f3e:	6e 7f       	andi	r22, 0xFE	; 254
 f40:	6e 5f       	subi	r22, 0xFE	; 254
 f42:	7f 4f       	sbci	r23, 0xFF	; 255
 f44:	8f 4f       	sbci	r24, 0xFF	; 255
 f46:	9f 4f       	sbci	r25, 0xFF	; 255
 f48:	af 4f       	sbci	r26, 0xFF	; 255
 f4a:	b1 e0       	ldi	r27, 0x01	; 1
 f4c:	3e d0       	rcall	.+124    	; 0xfca <__ultoa_invert+0x9c>
 f4e:	b4 e0       	ldi	r27, 0x04	; 4
 f50:	3c d0       	rcall	.+120    	; 0xfca <__ultoa_invert+0x9c>
 f52:	67 0f       	add	r22, r23
 f54:	78 1f       	adc	r23, r24
 f56:	89 1f       	adc	r24, r25
 f58:	9a 1f       	adc	r25, r26
 f5a:	a1 1d       	adc	r26, r1
 f5c:	68 0f       	add	r22, r24
 f5e:	79 1f       	adc	r23, r25
 f60:	8a 1f       	adc	r24, r26
 f62:	91 1d       	adc	r25, r1
 f64:	a1 1d       	adc	r26, r1
 f66:	6a 0f       	add	r22, r26
 f68:	71 1d       	adc	r23, r1
 f6a:	81 1d       	adc	r24, r1
 f6c:	91 1d       	adc	r25, r1
 f6e:	a1 1d       	adc	r26, r1
 f70:	20 d0       	rcall	.+64     	; 0xfb2 <__ultoa_invert+0x84>
 f72:	09 f4       	brne	.+2      	; 0xf76 <__ultoa_invert+0x48>
 f74:	68 94       	set
 f76:	3f 91       	pop	r19
 f78:	2a e0       	ldi	r18, 0x0A	; 10
 f7a:	26 9f       	mul	r18, r22
 f7c:	11 24       	eor	r1, r1
 f7e:	30 19       	sub	r19, r0
 f80:	30 5d       	subi	r19, 0xD0	; 208
 f82:	31 93       	st	Z+, r19
 f84:	de f6       	brtc	.-74     	; 0xf3c <__ultoa_invert+0xe>
 f86:	cf 01       	movw	r24, r30
 f88:	08 95       	ret
 f8a:	46 2f       	mov	r20, r22
 f8c:	47 70       	andi	r20, 0x07	; 7
 f8e:	40 5d       	subi	r20, 0xD0	; 208
 f90:	41 93       	st	Z+, r20
 f92:	b3 e0       	ldi	r27, 0x03	; 3
 f94:	0f d0       	rcall	.+30     	; 0xfb4 <__ultoa_invert+0x86>
 f96:	c9 f7       	brne	.-14     	; 0xf8a <__ultoa_invert+0x5c>
 f98:	f6 cf       	rjmp	.-20     	; 0xf86 <__ultoa_invert+0x58>
 f9a:	46 2f       	mov	r20, r22
 f9c:	4f 70       	andi	r20, 0x0F	; 15
 f9e:	40 5d       	subi	r20, 0xD0	; 208
 fa0:	4a 33       	cpi	r20, 0x3A	; 58
 fa2:	18 f0       	brcs	.+6      	; 0xfaa <__ultoa_invert+0x7c>
 fa4:	49 5d       	subi	r20, 0xD9	; 217
 fa6:	31 fd       	sbrc	r19, 1
 fa8:	40 52       	subi	r20, 0x20	; 32
 faa:	41 93       	st	Z+, r20
 fac:	02 d0       	rcall	.+4      	; 0xfb2 <__ultoa_invert+0x84>
 fae:	a9 f7       	brne	.-22     	; 0xf9a <__ultoa_invert+0x6c>
 fb0:	ea cf       	rjmp	.-44     	; 0xf86 <__ultoa_invert+0x58>
 fb2:	b4 e0       	ldi	r27, 0x04	; 4
 fb4:	a6 95       	lsr	r26
 fb6:	97 95       	ror	r25
 fb8:	87 95       	ror	r24
 fba:	77 95       	ror	r23
 fbc:	67 95       	ror	r22
 fbe:	ba 95       	dec	r27
 fc0:	c9 f7       	brne	.-14     	; 0xfb4 <__ultoa_invert+0x86>
 fc2:	00 97       	sbiw	r24, 0x00	; 0
 fc4:	61 05       	cpc	r22, r1
 fc6:	71 05       	cpc	r23, r1
 fc8:	08 95       	ret
 fca:	9b 01       	movw	r18, r22
 fcc:	ac 01       	movw	r20, r24
 fce:	0a 2e       	mov	r0, r26
 fd0:	06 94       	lsr	r0
 fd2:	57 95       	ror	r21
 fd4:	47 95       	ror	r20
 fd6:	37 95       	ror	r19
 fd8:	27 95       	ror	r18
 fda:	ba 95       	dec	r27
 fdc:	c9 f7       	brne	.-14     	; 0xfd0 <__ultoa_invert+0xa2>
 fde:	62 0f       	add	r22, r18
 fe0:	73 1f       	adc	r23, r19
 fe2:	84 1f       	adc	r24, r20
 fe4:	95 1f       	adc	r25, r21
 fe6:	a0 1d       	adc	r26, r0
 fe8:	08 95       	ret

00000fea <_exit>:
 fea:	f8 94       	cli

00000fec <__stop_program>:
 fec:	ff cf       	rjmp	.-2      	; 0xfec <__stop_program>
